{"version":3,"sources":["components/BlocklyWidget/styles.ts","components/BlocklyWidget/index.tsx","styles/theme/light.ts","styles/global.ts","styles.ts","util/customBlocks.ts","util/challenges.ts","components/Game/styles.ts","components/Map/styles.ts","util/gameStatusToString.ts","components/Map/index.tsx","util/makeMapMatrix.ts","util/checkFinish.ts","util/hasCoordinate.ts","util/apiFunctions.ts","components/Game/index.tsx","util/checkCollision.ts","components/PagingList/styles.ts","components/PagingList/index.tsx","util/getInitialPlayerCoordinates.ts","App.tsx","index.tsx"],"names":["BlocklyDiv","styled","div","memo","blocklyConfig","blocklyToolboxConfig","blocklyWorkspaceRef","setRemainingBlocks","style","useState","workspace","setWorkspace","blocks","useEffect","window","Blockly","custom","forEach","block","Blocks","type","init","this","jsonInit","JavaScript","generatorCallback","addChangeListener","remainingCapacity","toolbox","useMemo","builtin","kind","contents","Array","isArray","push","config","trashcan","blocklyDiv","document","querySelector","inject","STATEMENT_PREFIX","addReservedWords","dispose","bind","current","className","theme","title","colors","primary","secondary","text","game","background","map","path","border","player","collision","finish","createGlobalStyle","App","GameButtonContainer","Button","button","AppGlobal","movementForward","message0","previousStatement","nextStatement","colour","tooltip","helpUrl","movementRotate","args0","name","options","inputsInline","getFieldValue","controlsIfPath","direction","statementToCode","controlsIfElsePath","controlsRepeatUntilReachEnd","challenges","size","rows","columns","x","y","start","blockly","maxBlocks","Game","props","RemainingBlocksContainer","Map","Row","Column","mapDimensions","width","Player","coordinates","position","angle","gameStatusToString","status","GameStatus","Running","Stop","Collision","Fail","Finish","Maps","gameStatus","mapWidth","setMapWidth","updateMapWidth","mapElement","getComputedStyle","parseInt","addEventListener","removeEventListener","mapMatrix","row","length","column","found","find","point","makeMapMatrix","mapDimensiosn","index","checkFinish","hasCoordinate","list","undefined","e","hasPathForward","Math","abs","functions","forward","lastExecutedFunction","refresh","turnLeft","turnRight","notDone","isPathForward","isPathToLeft","isPathToRight","highlightBlock","id","checkCollision","i","Games","gameRef","onGameStatusChange","remainingBlocks","setRefresh","useCallback","interpreterInitHandler","interpreter","globalObject","that","Object","keys","apiFunctions","key","setProperty","createNativeFunction","Infinity","PagingList","ul","PagingItem","li","PaginList","total","onChange","end","indexes","data-selected","onClick","getInitialPlayerCoordinates","Apps","challengeIndex","setChallengeIndex","setGameStatus","useRef","simulationStatus","handleRunClick","code","workspaceToCode","Interpreter","nextStep","step","setTimeout","f","needExecutionDelay","handleStopResetClick","assign","lightTheme","pageIndex","ReactDOM","render","StrictMode","getElementById"],"mappings":"wNAEaA,EAAaC,IAAOC,IAAV,0B,OCsBRC,kBAAK,YAMT,IALTC,EAKQ,EALRA,cACAC,EAIQ,EAJRA,qBACAC,EAGQ,EAHRA,oBACAC,EAEQ,EAFRA,mBACAC,EACQ,EADRA,MACQ,EAC0BC,mBAAsC,MADhE,mBACDC,EADC,KACUC,EADV,KAGFC,EAASP,EAAqBO,OAEpCC,qBAAU,WACRC,OAAOC,QAAUA,MAChB,IAEHF,qBAAU,WACHD,EAAOI,QAEZJ,EAAOI,OAAOC,SAAQ,SAACC,GACrBH,IAAQI,OAAOD,EAAME,MAAQ,CAC3BC,KAAM,WACHC,KAAaC,SAASL,KAI1BH,IAAgBS,WAAWN,EAAME,MAAQF,EAAMO,uBAEjD,CAACf,EAAWE,IAEfC,qBAAU,WACHH,IAELA,EAAUgB,mBAAkB,WAC1BnB,EAAmBG,EAAUiB,wBAG/BpB,EAAmBG,EAAUiB,wBAC5B,CAACjB,EAAWH,IAEf,IAAMqB,EAAmBC,mBAAQ,WAC/B,IAAKjB,EAAOkB,UAAYlB,EAAOI,OAAQ,MAAO,CAAEe,KAAM,GAAIC,SAAU,IAEpE,IAAMJ,EAAmB,CACvBG,KAAM,gBACNC,SAAU,IASZ,OANIpB,EAAOkB,SAAWG,MAAMC,QAAQtB,EAAOkB,UACzClB,EAAOkB,QAAQb,SAAQ,SAACG,GAAD,OAAUQ,EAAQI,SAASG,KAAK,CAAEJ,KAAM,QAASX,YAEtER,EAAOI,QAAUiB,MAAMC,QAAQtB,EAAOI,SACxCJ,EAAOI,OAAOC,SAAQ,gBAAGG,EAAH,EAAGA,KAAH,OAAcQ,EAAQI,SAASG,KAAK,CAAEJ,KAAM,QAASX,YAEtEQ,IACN,CAAChB,IAwBJ,OAtBAC,qBAAU,WACR,IAAMuB,EAA8B,2BAC9BhC,GAAiB,IADa,IAElCwB,QAAUA,EACVS,UAAU,IAENC,EAAaC,SAASC,cAAc,gBAE1C,GAAKF,EAAL,CACA,IAAM5B,EAAYK,IAAQ0B,OAAOH,EAAYF,GAM7C,OALAzB,EAAaD,GAEZK,IAAgBS,WAAWkB,iBAAmB,wBAC9C3B,IAAgBS,WAAWmB,iBAAiB,kBAEtCjC,EAAUkC,QAAQC,KAAKnC,MAC7B,CAACkB,EAASxB,IAEbS,qBAAU,WACRP,EAAoBwC,QAAUpC,IAC7B,CAACA,EAAWJ,IAER,cAACN,EAAD,CAAY+C,UAAU,cAAcvC,MAAOA,OC3ErCwC,EAzBa,CAC1BC,MAAO,QAEPC,OAAQ,CACNC,QAAS,UACTC,UAAW,YACXC,KAAM,UACNC,KAAM,CACJC,WAAY,WAEdC,IAAK,CACHD,WAAY,UACZE,KAAM,CACJF,WAAY,UACZG,OAAQ,4BAGZH,WAAY,UACZI,OAAQ,CACNC,UAAW,MACXC,OAAQ,aCpBCC,cAAf,wJCAaC,EAAM9D,IAAOC,IAAV,qIAQH8D,EAAsB/D,IAAOC,IAAV,uMAUnB+D,EAAShE,IAAOiE,OAAV,2iBAoCNC,EAAYL,YAAH,ulBCpCTM,EAAoC,CAC/ChD,KAAM,mBACNiD,SAAU,UACVC,kBAAmB,KACnBC,cAAe,KACfC,OAAQ,IACRC,QAAS,yBACTC,QAAS,GACTjD,kBAAmB,iBAAM,iBAIdkD,EAAmC,CAC9CvD,KAAM,kBACNiD,SAAU,aACVO,MAAO,CACL,CACExD,KAAM,eAER,CACEA,KAAM,iBACNyD,KAAM,YACNC,QAAS,CACP,CAAC,cAAU,KACX,CAAC,eAAW,QAIlBC,cAAc,EACdT,kBAAmB,KACnBC,cAAe,KACfC,OAAQ,IACRC,QAAS,kCACTC,QAAS,GACTjD,kBAAmB,SAACP,GAAD,MACoB,MAArCA,EAAM8D,cAAc,aAAuB,gBAAkB,mBAIpDC,EAAmC,CAC9C7D,KAAM,mBACNiD,SAAU,yBACVO,MAAO,CACL,CACExD,KAAM,eAER,CACEA,KAAM,iBACNyD,KAAM,YACNC,QAAS,CACP,CAAC,QAAS,KACV,CAAC,qBAAiB,KAClB,CAAC,sBAAkB,OAGvB,CACE1D,KAAM,eAER,CACEA,KAAM,kBACNyD,KAAM,cAGVE,cAAc,EACdT,kBAAmB,KACnBC,cAAe,KACfC,OAAQ,IACRC,QAAS,6EACTC,QAAS,GACTjD,kBAAmB,SAACP,GAClB,IAAMgE,EAAYhE,EAAM8D,cAAc,aAQtC,MAAM,OAAN,OANgB,MAAdE,EACI,kBACc,MAAdA,EACA,iBACA,kBAEN,kBACCpE,OAAeC,QAAQS,WAAW2D,gBAAgBjE,EAAO,cAAgB,GAD1E,SAOSkE,EAAuC,CAClDhE,KAAM,wBACNiD,SAAU,iCACVO,MAAO,CACL,CACExD,KAAM,eAER,CACEA,KAAM,iBACNyD,KAAM,YACNC,QAAS,CACP,CAAC,QAAS,KACV,CAAC,qBAAiB,KAClB,CAAC,sBAAkB,OAGvB,CACE1D,KAAM,eAER,CACEA,KAAM,kBACNyD,KAAM,oBAER,CACEzD,KAAM,kBACNyD,KAAM,oBAGVE,cAAc,EACdT,kBAAmB,KACnBC,cAAe,KACfC,OAAQ,IACRC,QACE,2HACFC,QAAS,GACTjD,kBAAmB,SAACP,GAClB,IAAMgE,EAAYhE,EAAM8D,cAAc,aAQtC,MAAM,OAAN,OANgB,MAAdE,EACI,kBACc,MAAdA,EACA,iBACA,kBAEN,kBACCpE,OAAeC,QAAQS,WAAW2D,gBAAgBjE,EAAO,qBAAuB,GADjF,yBAGCJ,OAAeC,QAAQS,WAAW2D,gBAAgBjE,EAAO,oBAAsB,GAHhF,SASSmE,EAAgD,CAC3DjE,KAAM,kCACNiD,SAAU,+BACVO,MAAO,CACL,CACExD,KAAM,eAER,CACEA,KAAM,kBACNyD,KAAM,cAGVP,kBAAmB,KACnBC,cAAe,KACfC,OAAQ,IACRC,QAAS,8CACTC,QAAS,GACTjD,kBAAmB,SAACP,GAAD,uCAChBJ,OAAeC,QAAQS,WAAW2D,gBAAgBjE,EAAO,cAAgB,GADzD,SCyDNoE,EA/LiB,CAC9B,CACE1D,QAAS,CACPhB,OAAQ,CACNkB,QAAS,GACTd,OAAQ,CAACoD,EAAiBO,KAG9BnB,IAAK,CACH+B,KAAM,CAAEC,KAAM,GAAIC,QAAS,IAC3BhC,KAAM,CACJ,CAAEiC,EAAG,EAAGC,EAAG,IACX,CAAED,EAAG,GAAIC,EAAG,IACZ,CAAED,EAAG,GAAIC,EAAG,KAEdC,MAAO,CAAEF,EAAG,EAAGC,EAAG,IAClB9B,OAAQ,CAAE6B,EAAG,GAAIC,EAAG,KAEtBE,QAAS,IAEX,CACEjE,QAAS,CACPhB,OAAQ,CACNkB,QAAS,GACTd,OAAQ,CAACoD,EAAiBO,EAAgBU,KAG9C7B,IAAK,CACH+B,KAAM,CAAEC,KAAM,GAAIC,QAAS,IAC3BhC,KAAM,CACJ,CAAEiC,EAAG,EAAGC,EAAG,IACX,CAAED,EAAG,GAAIC,EAAG,IACZ,CAAED,EAAG,GAAIC,EAAG,IACZ,CAAED,EAAG,GAAIC,EAAG,GACZ,CAAED,EAAG,GAAIC,EAAG,GACZ,CAAED,EAAG,GAAIC,EAAG,GACZ,CAAED,EAAG,GAAIC,EAAG,GACZ,CAAED,EAAG,GAAIC,EAAG,IAEdC,MAAO,CAAEF,EAAG,EAAGC,EAAG,IAClB9B,OAAQ,CAAE6B,EAAG,GAAIC,EAAG,IAEtBE,QAAS,CACPC,UAAW,IAGf,CACElE,QAAS,CACPhB,OAAQ,CACNkB,QAAS,GACTd,OAAQ,CAACoD,EAAiBO,EAAgBM,EAAgBI,KAG9D7B,IAAK,CACH+B,KAAM,CAAEC,KAAM,GAAIC,QAAS,IAC3BhC,KAAM,CACJ,CAAEiC,EAAG,EAAGC,EAAG,IACX,CAAED,EAAG,GAAIC,EAAG,IACZ,CAAED,EAAG,GAAIC,EAAG,IACZ,CAAED,EAAG,GAAIC,EAAG,IACZ,CAAED,EAAG,GAAIC,EAAG,GACZ,CAAED,EAAG,GAAIC,EAAG,GACZ,CAAED,EAAG,GAAIC,EAAG,GACZ,CAAED,EAAG,GAAIC,EAAG,GACZ,CAAED,EAAG,GAAIC,EAAG,GACZ,CAAED,EAAG,GAAIC,EAAG,GACZ,CAAED,EAAG,GAAIC,EAAG,GACZ,CAAED,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,KAEbC,MAAO,CAAEF,EAAG,EAAGC,EAAG,IAClB9B,OAAQ,CAAE6B,EAAG,EAAGC,EAAG,KAErBE,QAAS,CACPC,UAAW,IAGf,CACElE,QAAS,CACPhB,OAAQ,CACNkB,QAAS,GACTd,OAAQ,CAACoD,EAAiBO,EAAgBM,EAAgBI,KAG9D7B,IAAK,CACH+B,KAAM,CAAEC,KAAM,GAAIC,QAAS,IAC3BhC,KAAM,CACJ,CAAEiC,EAAG,EAAGC,EAAG,IACX,CAAED,EAAG,EAAGC,EAAG,IACX,CAAED,EAAG,GAAIC,EAAG,IACZ,CAAED,EAAG,GAAIC,EAAG,IACZ,CAAED,EAAG,GAAIC,EAAG,GACZ,CAAED,EAAG,GAAIC,EAAG,GACZ,CAAED,EAAG,GAAIC,EAAG,GACZ,CAAED,EAAG,GAAIC,EAAG,GACZ,CAAED,EAAG,GAAIC,EAAG,GACZ,CAAED,EAAG,GAAIC,EAAG,GACZ,CAAED,EAAG,GAAIC,EAAG,GACZ,CAAED,EAAG,GAAIC,EAAG,GACZ,CAAED,EAAG,GAAIC,EAAG,IAEdC,MAAO,CAAEF,EAAG,EAAGC,EAAG,IAClB9B,OAAQ,CAAE6B,EAAG,GAAIC,EAAG,IAEtBE,QAAS,CACPC,UAAW,IAGf,CACElE,QAAS,CACPhB,OAAQ,CACNkB,QAAS,GACTd,OAAQ,CACNoD,EACAO,EACAM,EACAG,EACAC,KAIN7B,IAAK,CACH+B,KAAM,CAAEC,KAAM,GAAIC,QAAS,IAC3BhC,KAAM,CACJ,CAAEiC,EAAG,GAAIC,EAAG,IACZ,CAAED,EAAG,GAAIC,EAAG,IACZ,CAAED,EAAG,GAAIC,EAAG,IACZ,CAAED,EAAG,GAAIC,EAAG,IACZ,CAAED,EAAG,GAAIC,EAAG,IACZ,CAAED,EAAG,GAAIC,EAAG,IACZ,CAAED,EAAG,GAAIC,EAAG,GACZ,CAAED,EAAG,GAAIC,EAAG,GACZ,CAAED,EAAG,GAAIC,EAAG,GACZ,CAAED,EAAG,GAAIC,EAAG,GACZ,CAAED,EAAG,GAAIC,EAAG,GACZ,CAAED,EAAG,GAAIC,EAAG,GACZ,CAAED,EAAG,GAAIC,EAAG,GACZ,CAAED,EAAG,GAAIC,EAAG,GACZ,CAAED,EAAG,GAAIC,EAAG,GACZ,CAAED,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,GAGX,CAAED,EAAG,GAAIC,EAAG,GACZ,CAAED,EAAG,GAAIC,EAAG,GACZ,CAAED,EAAG,GAAIC,EAAG,GAGZ,CAAED,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,GAAIC,EAAG,GAGZ,CAAED,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,IACX,CAAED,EAAG,EAAGC,EAAG,IACX,CAAED,EAAG,EAAGC,EAAG,IACX,CAAED,EAAG,EAAGC,EAAG,IACX,CAAED,EAAG,EAAGC,EAAG,IACX,CAAED,EAAG,EAAGC,EAAG,IACX,CAAED,EAAG,EAAGC,EAAG,KAEbC,MAAO,CAAEF,EAAG,GAAIC,EAAG,IACnB9B,OAAQ,CAAE6B,EAAG,EAAGC,EAAG,IAErBE,QAAS,CACPC,UAAW,KCjOJC,EAAO9F,IAAOC,IAAV,8JAEK,SAAC8F,GAAD,OAAWA,EAAMhD,MAAME,OAAOI,KAAKC,cACnC,SAACyC,GAAD,OAAWA,EAAMhD,MAAME,OAAOM,IAAIC,QAM3CwC,EAA2BhG,IAAOC,IAAV,uKAI1B,SAAC8F,GAAD,OAAWA,EAAMhD,MAAME,OAAOG,QCD5B6C,EAAMjG,IAAOC,IAAV,kKAIM,SAAC8F,GAAD,OAAWA,EAAMhD,MAAME,OAAOM,IAAID,cAK3C4C,EAAMlG,IAAOC,IAAV,sEAKHkG,EAASnG,IAAOC,IAAV,gtBACJ,SAAC8F,GAAD,OAAWA,EAAMK,cAAcZ,WAClC,SAACO,GAAD,OAAWA,EAAMK,cAAcb,QAC1B,SAACQ,GAAD,OAAWA,EAAMK,cAAcC,SAC5B,SAACN,GAAD,OAAWA,EAAMhD,MAAME,OAAOM,IAAID,cACpC,SAACyC,GAAD,OAAWA,EAAMhD,MAAME,OAAOM,IAAIC,KAAKF,cAClC,SAACyC,GAAD,OAAWA,EAAMhD,MAAME,OAAOM,IAAIC,KAAKC,UAuBjD,SAACsC,GAAD,OAAWA,EAAMhD,MAAME,OAAOC,WAS9BoD,EAAStG,IAAOC,IAAV,2tBAaR,SAAC8F,GAAD,OAAWA,EAAMQ,YAAYC,SAASd,KACnC,SAACK,GAAD,OAAWA,EAAMQ,YAAYC,SAASf,KACvC,SAACM,GAAD,OAAWA,EAAMQ,YAAYE,SAC3B,SAACV,GAAD,OAAWA,EAAMK,cAAcZ,WAC7B,SAACO,GAAD,OAAWA,EAAMK,cAAcC,SAQnC,SAACN,GAAD,OAAWA,EAAMhD,MAAME,OAAOS,OAAOC,aAIrC,SAACoC,GAAD,OAAWA,EAAMhD,MAAME,OAAOS,OAAOE,UC7FnC,SAAS8C,EAAmBC,GACzC,OAAQA,GACN,KAAKC,EAAWC,QACd,MAAO,UACT,KAAKD,EAAWE,KACd,MAAO,OACT,KAAKF,EAAWG,UACd,MAAO,YACT,KAAKH,EAAWI,KACd,MAAO,OACT,KAAKJ,EAAWK,OACd,MAAO,UCEE,SAASC,EAAT,GAAmD,IAAnCC,EAAkC,EAAlCA,WAAY5D,EAAsB,EAAtBA,IAAKG,EAAiB,EAAjBA,OAAiB,EAC/BlD,mBAAS,GADsB,mBACxD4G,EADwD,KAC9CC,EAD8C,KAG/DzG,qBAAU,WACR,SAAS0G,IACP,IAAMC,EAAajF,SAASC,cAAc,QAClC8D,GAAUkB,EAAa1G,OAAO2G,iBAAiBD,GAAc,CAAElB,MAAO,MAAtEA,MACRgB,EAAYI,SAASpB,GAAS,MAMhC,OAHAiB,IAEAzG,OAAO6G,iBAAiB,SAAUJ,GAC3B,kBAAMzG,OAAO8G,oBAAoB,SAAUL,MACjD,CAACD,IAEJ,IAAM9B,EAAOhC,EAAI+B,KAAKC,KAChBC,EAAUjC,EAAI+B,KAAKE,QAEnBoC,EC1BO,YAGb,IAHqE,IAA/BrE,EAA8B,EAA9BA,IAAKgC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,QAC3CoC,EAAwB,GAErBC,EAAM,EAAGA,EAAMtC,EAAMsC,IAC5BD,EAAUC,GAAO,GACjBD,EAAUC,GAAKC,OAAStC,EAG1B,IARoE,eAQ3DqC,GACP,IATkE,eASzDE,GACP,IAAMC,EAAQzE,EAAIC,KAAKyE,MAAK,SAACC,GAAD,OAAWA,EAAMzC,IAAMsC,GAAUG,EAAMxC,IAAMmC,KACzED,EAAUC,GAAKE,GAAUC,EAAQ,OAAS,UAFnCD,EAAS,EAAGA,EAASvC,EAASuC,IAAW,EAAzCA,IADFF,EAAM,EAAGA,EAAMtC,EAAMsC,IAA9B,EAASA,GAST,OAHItE,EAAIoC,QAAOiC,EAAUrE,EAAIoC,MAAMD,GAAGnC,EAAIoC,MAAMF,GAAK,SACjDlC,EAAIK,SAAQgE,EAAUrE,EAAIK,OAAO8B,GAAGnC,EAAIK,OAAO6B,GAAK,UAEjDmC,EDSWO,CAAc,CAAE5E,MAAKgC,OAAMC,YAEvC4C,EAAgB,CACpB5C,QAASA,EACTD,KAAMA,EACNc,MAAOe,GAGT,OACE,eAACnB,EAAD,CAAKnD,UAAU,MAAf,UACG8E,EAAUrE,KAAI,SAACsE,EAAKQ,GAAN,OACb,cAACnC,EAAD,UACG2B,EAAItE,KAAI,SAACwE,EAAQM,GAAT,OACP,cAAClC,EAAD,CACEC,cAAegC,EAEftF,UAAS,iBAAYiF,GAHvB,SAKc,WAAXA,EAAsB,SAAM,IAL/B,iBAEiBM,QAJrB,cAAiBA,OAYnB,cAAC/B,EAAD,CACEF,cAAegC,EACf7B,YAAa7C,EACbZ,UAAW4D,EAAmBS,GAHhC,uBEjDS,SAASmB,EAAT,GAA+C,IAAxB5E,EAAuB,EAAvBA,OAAQH,EAAe,EAAfA,IAC5C,OAAOG,EAAO8C,SAASf,IAAMlC,EAAIK,OAAO6B,GAAK/B,EAAO8C,SAASd,IAAMnC,EAAIK,OAAO8B,ECJjE,SAAS6C,EAAT,EAA6CC,GAAqB,IAAzC/C,EAAwC,EAAxCA,EAAGC,EAAqC,EAArCA,EACzC,QAAK1D,MAAMC,QAAQuG,SAGFC,IADHD,EAAKP,MAAK,SAACS,GAAD,OAAOA,EAAEjD,IAAMA,GAAKiD,EAAEhD,IAAMA,KCsDtD,SAASiD,EAAelC,EAAe/C,EAA2BH,GAChEkD,EAAQmC,KAAKC,IAAKpC,EAAQ,IAAO,KAAO,IACxC,IAAMhB,EAAI/B,EAAO8C,SAASf,EACpBC,EAAIhC,EAAO8C,SAASd,EAHgD,EAIhDnC,EAAI+B,KAAtBE,EAJkE,EAIlEA,QAASD,EAJyD,EAIzDA,KAEjB,OAAc,IAAVkB,EAAoBhB,EAAID,EAAU,GAAK+C,EAAc,CAAE9C,EAAGA,EAAI,EAAGC,KAAKnC,EAAIC,MAChE,KAAViD,EAAqBf,EAAI,GAAK6C,EAAc,CAAE9C,EAAGA,EAAGC,EAAGA,EAAI,GAAKnC,EAAIC,MAC1D,MAAViD,EAAsBhB,EAAI,GAAK8C,EAAc,CAAE9C,EAAGA,EAAI,EAAGC,KAAKnC,EAAIC,MACxD,MAAViD,IAAsBf,EAAIH,EAAO,GAAKgD,EAAc,CAAE9C,EAAGA,EAAGC,EAAGA,EAAI,GAAKnC,EAAIC,OA2BlF,ICvFYoD,E,IDkGGkC,GAXiB,CAC9BC,QAzEK,WACD1H,KAAKZ,YAAYY,KAAaZ,UAAUuI,qBAAuB,WAEnE,IAAMvC,EAAQmC,KAAKC,IAAKxH,KAAKqC,OAAO+C,MAAQ,IAAO,KAAO,IACpDhB,EAAIpE,KAAKqC,OAAO8C,SAASf,EACzBC,EAAIrE,KAAKqC,OAAO8C,SAASd,EALG,EAMRrE,KAAKkC,IAAI+B,KAA3BE,EAN0B,EAM1BA,QAASD,EANiB,EAMjBA,KAEH,IAAVkB,GAAehB,EAAI,EAAID,EAASnE,KAAKqC,OAAO8C,SAASf,IACtC,KAAVgB,GAAgBf,EAAGrE,KAAKqC,OAAO8C,SAASd,IAC9B,MAAVe,GAAiBhB,EAAGpE,KAAKqC,OAAO8C,SAASf,IAC/B,MAAVgB,GAAiBf,EAAI,EAAIH,GAAMlE,KAAKqC,OAAO8C,SAASd,IAE7DrE,KAAK4H,QAAQ,KA6DbC,SA1DK,WACJ7H,KAAaZ,UAAUuI,qBAAuB,WAE/C3H,KAAKqC,OAAO+C,OAAS,GACrBpF,KAAK4H,QAAQ,KAuDbE,UApDK,WACJ9H,KAAaZ,UAAUuI,qBAAuB,YAE/C3H,KAAKqC,OAAO+C,OAAS,GACrBpF,KAAK4H,QAAQ,KAiDbG,QA9CK,WAGL,OAFC/H,KAAaZ,UAAUuI,qBAAuB,WAEvCV,EAAY,CAAE5E,OAAQrC,KAAKqC,OAAQH,IAAKlC,KAAKkC,OA4CrD8F,cA3BK,WAGL,OAFChI,KAAaZ,UAAUuI,qBAAuB,gBAExCL,EAAetH,KAAKqC,OAAO+C,MAAOpF,KAAKqC,OAAQrC,KAAKkC,MAyB3D+F,aAtBK,WAGL,OAFCjI,KAAaZ,UAAUuI,qBAAuB,eAExCL,EAAetH,KAAKqC,OAAO+C,MAAQ,GAAIpF,KAAKqC,OAAQrC,KAAKkC,MAoBhEgG,cAjBK,WAGL,OAFClI,KAAaZ,UAAUuI,qBAAuB,gBAExCL,EAAetH,KAAKqC,OAAO+C,MAAQ,GAAIpF,KAAKqC,OAAQrC,KAAKkC,MAehEiG,eAZK,SAAoCC,GACxCpI,KAAaZ,UAAU+I,eAAeC,KEvF1B,SAASC,GAAT,GACb,IAD+D,IAAxBhG,EAAuB,EAAvBA,OAAQH,EAAe,EAAfA,IACtCoG,EAAI,EAAGA,EAAIpG,EAAIC,KAAKsE,OAAQ6B,IACnC,GAAIpG,EAAIC,KAAKmG,GAAGlE,IAAM/B,EAAO8C,SAASf,GAAKlC,EAAIC,KAAKmG,GAAGjE,IAAMhC,EAAO8C,SAASd,EAAG,OAAO,EAEzF,OAAO,EDqBM,SAASkE,GAAT,GAQJ,IAPTC,EAOQ,EAPRA,QACA1C,EAMQ,EANRA,WACA2C,EAKQ,EALRA,mBACAvG,EAIQ,EAJRA,IACAG,EAGQ,EAHRA,OACArD,EAEQ,EAFRA,oBACA0J,EACQ,EADRA,gBACQ,EACevJ,mBAAiB,IAA/BwJ,EADD,oBAGRpJ,qBAAU,WACH2C,EAAIoC,QAETjC,EAAO8C,SAASf,EAAIlC,EAAIoC,MAAMF,EAC9B/B,EAAO8C,SAASd,EAAInC,EAAIoC,MAAMD,KAC7B,CAACnC,EAAKG,IAET,IAAMuF,EAAUgB,uBAAY,WACtBP,GAAe,CAAEhG,SAAQH,SAC3BuG,EAAmBlD,EAAWG,WAGhCiD,EAAW,MACV,CAACA,EAAYF,EAAoBpG,EAAQH,IAuB5C,OAFAsG,EAAQhH,QAAU,CAAEqH,uBAnBpB,SAAgCC,EAAqBC,GACnD,IAAMC,EAAa,CACjB3G,SACAH,MACA9C,UAAWJ,EAAoBwC,QAC/BoG,WAGFqB,OAAOC,KAAKC,IAAcxJ,SAAQ,SAACyJ,GAChCN,EAAoBO,YACnBN,EACAK,EACCN,EAAoBQ,qBACnBH,GAAaC,GAA2B7H,KAAKyH,UASnD,eAACvE,EAAD,CAAMhD,UAAU,OAAhB,UACE,cAAC,EAAD,CAAKqE,WAAYA,EAAYzD,OAAQA,EAAQH,IAAKA,IACjDwG,IAAoBa,KACnB,cAAC5E,EAAD,sCAAgD+D,S,SAzE5CnD,O,qBAAAA,I,eAAAA,I,yBAAAA,I,eAAAA,I,oBAAAA,M,KETL,IAAMiE,GAAa7K,IAAO8K,GAAV,0HAOVC,GAAa/K,IAAOgL,GAAV,uYAID,SAACjF,GAAD,OAAWA,EAAMhD,MAAME,OAAOE,aAa5B,SAAC4C,GAAD,OAAWA,EAAMhD,MAAME,OAAOC,WChBvC,SAAS+H,GAAT,GAKb,IALsE,IAApCC,EAAmC,EAAnCA,MAAOrI,EAA4B,EAA5BA,QAASsI,EAAmB,EAAnBA,SAC5CxF,EAAQuF,EAAQ,EAAKrI,EAAU,EAAI,EAAI,EAAIA,EAAU,EAAK,EAC1DuI,EAAMF,EAAQ,EAAKvF,EAAQ,EAAIuF,EAAQA,EAAQvF,EAAQ,EAAKuF,EAE5DG,EAAU,GACP1B,EAAIhE,EAAOgE,GAAKyB,EAAKzB,IAAK0B,EAAQnJ,KAAKyH,GAEhD,OACE,cAACkB,GAAD,CAAY/H,UAAU,cAAtB,SACGuI,EAAQ9H,KAAI,SAACoG,GAAD,OACX,cAACoB,GAAD,CAAyBO,gBAAe3B,IAAM9G,EAAS0I,QAAS,kBAAMJ,EAASxB,IAA/E,SACGA,GADH,UAAoBA,SCbb,SAAS6B,GAA4B7F,GAIlD,MAAO,CACLc,MAAO,EACPD,SAAU,CAAEf,EALJE,EAAQA,EAAMF,EAAI,EAKXC,EAJPC,EAAQA,EAAMD,EAAI,ICUf,SAAS+F,KAAQ,IAAD,EACejL,mBAAiB,GADhC,mBACtBkL,EADsB,KACNC,EADM,OAEOnL,mBAAqBoG,EAAWE,MAFvC,mBAEtBK,EAFsB,KAEVyE,EAFU,OAGiBpL,mBAAiBoK,KAHlC,mBAGtBb,EAHsB,KAGLzJ,EAHK,KAIvBD,EAAsBwL,iBAAoC,MAC1DhC,EAAUgC,iBAAuB,MACjCnI,EAAS9B,kBAAQ4J,GAA6B,IAC9CM,EAAmBlK,mBAAQ,iBAAO,CAAE+E,OAAQC,EAAWE,QAAS,IAEtElG,qBAAU,WACRkL,EAAiBnF,OAASQ,IACzB,CAACA,EAAY2E,IAEhBlL,qBAcA,WACMP,EAAoBwC,SAASxC,EAAoBwC,QAAQ2G,eAAe,MAfvC,CAACrC,IAExC,IAAM/G,EAAuBwB,mBAAQ,WACnC,OAAOyD,EAAWqG,GAAgB/J,UACjC,CAAC+J,IAEEvL,EAAgByB,mBAAQ,WAC5B,OAAOyD,EAAWqG,GAAgB9F,UACjC,CAAC8F,IAEEnI,EAAM3B,mBAAQ,WAClB,OAAOyD,EAAWqG,GAAgBnI,MACjC,CAACmI,IAiBJ,SAASK,IACP,GAAK1L,EAAoBwC,SAAYgH,EAAQhH,QAA7C,CAEA,IAAMmJ,EAAgBlL,IAAgBS,WAAW0K,gBAAgB5L,EAAoBwC,SAC/EsH,EAAc,IAAKtJ,OAAeqL,YACtCF,EACCnC,EAAQhH,QAAgBqH,wBAS3B4B,EAAiBnF,OAASC,EAAWC,QACrC+E,EAAchF,EAAWC,SAEzB,SAASsF,IACHL,EAAiBnF,SAAWC,EAAWC,UAEvCsD,EAAYiC,OAAQC,WAAWF,EAhCvC,WACE,IAAK9L,EAAoBwC,QAAS,OAAO,EAEzC,IACMmF,EADmB,CAAC,UAAW,WAAY,aAClBC,MAC7B,SAACqE,GAAD,OAAOA,IAAOjM,EAAoBwC,QAAgBmG,wBAGpD,OADC3I,EAAoBwC,QAAgBmG,qBAAuB,GACrDhB,EAwBwCuE,GAjEtB,IAiEoE,GAXvF7C,GAAe,CAAEhG,SAAQH,QAAQqI,EAAchF,EAAWG,WACrDuB,EAAY,CAAE5E,SAAQH,QAAQqI,EAAchF,EAAWK,QAC3D2E,EAAchF,EAAWI,OAahCmF,IAGF,SAASK,IACPlC,OAAOmC,OAAO/I,EAAQ8H,GAA4BnG,EAAWqG,GAAgBnI,IAAIoC,QACjFiG,EAAchF,EAAWE,MAsC3B,OACE,cAAC,IAAD,CAAe/D,MAAO2J,EAAtB,SACE,eAAC5I,EAAD,CAAKhB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAACoB,EAAD,IACA,eAACH,EAAD,CAAqBjB,UAAU,wBAA/B,UACE,cAAC,GAAD,CACEoI,MAAO7F,EAAWyC,OAClBjF,QAAS6I,EAAiB,EAC1BP,SApCV,SAA2BwB,GACzBhB,EAAkBgB,EAAY,GAC9BrC,OAAOmC,OAAO/I,EAAQ8H,GAA4BnG,EAAWsH,EAAY,GAAGpJ,IAAIoC,QAChFiG,EAAchF,EAAWE,SAmCnB,cAAC,GAAD,CACEiD,gBAAiBA,EACjBF,QAASA,EACT1C,WAAYA,EACZ2C,mBAAoB8B,EACpBrI,IAAKA,EACLG,OAAQA,EACRrD,oBAAqBA,IAEvB,cAAC2D,EAAD,CACEuH,QA1CV,WACE,OAAQpE,GACN,KAAKP,EAAWC,QACd2F,IACA,MACF,KAAK5F,EAAWE,KACdiF,IACA,MACF,KAAKnF,EAAWG,UAGhB,KAAKH,EAAWI,KACdwF,IACA,MACF,KAAK5F,EAAWK,OA3BdyE,EAAiB,EAAIrG,EAAWyC,SAClC6D,EAAkBD,EAAiB,GACnCpB,OAAOmC,OAAO/I,EAAQ8H,GAA4BnG,EAAWqG,EAAiB,GAAGnI,IAAIoC,QACrFiG,EAAchF,EAAWE,SAqDnBhE,UAAS,qBAAgB4D,EAAmBS,SAGhD,cAAC,EAAD,CACE7G,mBAAoBA,EACpBF,qBAAsBA,EACtBD,cAAeA,EACfE,oBAAqBA,SC1J/BuM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFxK,SAASyK,eAAe,W","file":"static/js/main.aed7f302.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const BlocklyDiv = styled.div``;\n","import React, { useEffect, useState, useMemo, memo } from \"react\";\nimport Blockly from \"blockly\";\n\nimport { BlocklyDiv } from \"./styles\";\n\nimport { IBlockly, ToolboxConfig } from \"../../util/challenges\";\nimport { BlocklyComponent } from \"../../util/customBlocks\";\n\nexport interface Props {\n  blocklyConfig: IBlockly;\n  blocklyToolboxConfig: ToolboxConfig;\n  blocklyWorkspaceRef: React.MutableRefObject<Blockly.WorkspaceSvg | null>;\n  setRemainingBlocks: React.Dispatch<React.SetStateAction<number>>;\n  style?: React.CSSProperties;\n}\n\nexport interface Toolbox {\n  kind: string;\n  contents: {\n    kind: string;\n    type: BlocklyComponent | string;\n  }[];\n}\n\nexport default memo(function BlocklyWidget({\n  blocklyConfig,\n  blocklyToolboxConfig,\n  blocklyWorkspaceRef,\n  setRemainingBlocks,\n  style,\n}: Props) {\n  const [workspace, setWorkspace] = useState<Blockly.WorkspaceSvg | null>(null);\n\n  const blocks = blocklyToolboxConfig.blocks;\n\n  useEffect(() => {\n    window.Blockly = Blockly;\n  }, []);\n\n  useEffect(() => {\n    if (!blocks.custom) return;\n\n    blocks.custom.forEach((block) => {\n      Blockly.Blocks[block.type] = {\n        init: function () {\n          (this as any).jsonInit(block);\n        },\n      };\n\n      (Blockly as any).JavaScript[block.type] = block.generatorCallback;\n    });\n  }, [workspace, blocks]);\n\n  useEffect(() => {\n    if (!workspace) return;\n\n    workspace.addChangeListener(() => {\n      setRemainingBlocks(workspace.remainingCapacity());\n    });\n\n    setRemainingBlocks(workspace.remainingCapacity());\n  }, [workspace, setRemainingBlocks]);\n\n  const toolbox: Toolbox = useMemo(() => {\n    if (!blocks.builtin && !blocks.custom) return { kind: \"\", contents: [] };\n\n    const toolbox: Toolbox = {\n      kind: \"flyoutToolbox\",\n      contents: [],\n    };\n\n    if (blocks.builtin && Array.isArray(blocks.builtin))\n      blocks.builtin.forEach((type) => toolbox.contents.push({ kind: \"block\", type }));\n\n    if (blocks.custom && Array.isArray(blocks.custom))\n      blocks.custom.forEach(({ type }) => toolbox.contents.push({ kind: \"block\", type }));\n\n    return toolbox;\n  }, [blocks]);\n\n  useEffect(() => {\n    const config: Blockly.BlocklyOptions = {\n      ...(blocklyConfig || {}),\n      toolbox: (toolbox as unknown) as HTMLElement,\n      trashcan: true,\n    };\n    const blocklyDiv = document.querySelector(\".blockly-div\");\n\n    if (!blocklyDiv) return;\n    const workspace = Blockly.inject(blocklyDiv, config);\n    setWorkspace(workspace);\n\n    (Blockly as any).JavaScript.STATEMENT_PREFIX = \"highlightBlock(%1);\\n\";\n    (Blockly as any).JavaScript.addReservedWords(\"highlightBlock\");\n\n    return workspace.dispose.bind(workspace);\n  }, [toolbox, blocklyConfig]);\n\n  useEffect(() => {\n    blocklyWorkspaceRef.current = workspace;\n  }, [workspace, blocklyWorkspaceRef]);\n\n  return <BlocklyDiv className=\"blockly-div\" style={style} />;\n});\n","import { DefaultTheme } from \"styled-components\";\n\nconst theme: DefaultTheme = {\n  title: \"light\",\n\n  colors: {\n    primary: \"#1542c7\",\n    secondary: \"royalblue\",\n    text: \"#ffffff\",\n    game: {\n      background: \"#f0f0ff\",\n    },\n    map: {\n      background: \"#a1aaf8\",\n      path: {\n        background: \"#e2e4f7\",\n        border: \"rgb(161, 170, 248, 0.4)\",\n      },\n    },\n    background: \"#f5f5f5\",\n    player: {\n      collision: \"red\",\n      finish: \"#00ff00\",\n    },\n  },\n};\n\nexport default theme;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    outline: none;\n    font-family: sans-serif;\n  }\n`;\n","import styled, { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const App = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  min-height: 100%;\r\n  padding: 1rem;\r\n`;\r\n\r\nexport const GameButtonContainer = styled.div`\r\n  height: calc(100vh - 2rem);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: stretch;\r\n  padding-right: 1rem;\r\n  flex: 1;\r\n  max-width: calc(100vh - 9rem);\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  border: none;\r\n  background-color: royalblue;\r\n  color: white;\r\n  padding: 0.7rem 1.5rem;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n  outline: none;\r\n  user-select: none;\r\n  box-shadow: 0 0.2rem 0.5rem rgba(0, 0, 0, 0.5);\r\n\r\n  &::before {\r\n    content: \"Run\";\r\n  }\r\n\r\n  &.running {\r\n    background-color: #6387f3;\r\n    &::before {\r\n      content: \"Restart\";\r\n    }\r\n  }\r\n\r\n  &.collision,\r\n  &.fail {\r\n    &::before {\r\n      content: \"Restart\";\r\n    }\r\n  }\r\n\r\n  &.finish {\r\n    &::before {\r\n      content: \"Next\";\r\n    }\r\n  }\r\n`;\r\n\r\nexport const AppGlobal = createGlobalStyle`\r\n  .blockly-div {\r\n    flex: 1;\r\n    height: calc(100vh - 2rem);\r\n  }\r\n\r\n  .game-button-container ul {\r\n    margin-bottom: 1rem;\r\n  }\r\n\r\n  .game-button-container .game {\r\n    margin-bottom: 1rem;\r\n  }\r\n\r\n  @media screen and (max-width: 700px) {\r\n    .app {\r\n      flex-direction: column;\r\n      padding: 0.5rem;\r\n    }\r\n\r\n    .game-button-container {\r\n      width: 100%;\r\n      padding-right: 0;\r\n    }\r\n\r\n    .game, .paging-list {\r\n      margin-bottom: 0.5rem;\r\n    }\r\n\r\n    .blockly-div {\r\n      width: 100%;\r\n      height: 70vh;\r\n      margin-top: 0.5rem;\r\n    }\r\n  }\r\n`;\r\n","// source: https://blockly-demo.appspot.com/static/demos/blockfactory/index.html#8wpthh\ninterface BlocklyArgs {\n  type: string;\n  name?: string;\n  options?: Array<Array<string>>;\n}\n\nexport interface BlocklyComponent {\n  type: string;\n  message0: string;\n  args0?: BlocklyArgs[];\n  inputsInline?: boolean;\n  previousStatement: object | null;\n  nextStatement: object | null;\n  colour: number;\n  tooltip: string;\n  helpUrl: string;\n  generatorCallback(block?: any): void;\n}\n\nexport const movementForward: BlocklyComponent = {\n  type: \"movement_forward\",\n  message0: \"forward\",\n  previousStatement: null,\n  nextStatement: null,\n  colour: 285,\n  tooltip: \"Moves one step forward\",\n  helpUrl: \"\",\n  generatorCallback: () => \"forward();\\n\",\n};\n\n// source: https://blockly-demo.appspot.com/static/demos/blockfactory/index.html#83j9gt\nexport const movementRotate: BlocklyComponent = {\n  type: \"movement_rotate\",\n  message0: \"turn %1 %2\",\n  args0: [\n    {\n      type: \"input_dummy\",\n    },\n    {\n      type: \"field_dropdown\",\n      name: \"direction\",\n      options: [\n        [\"left ↺\", \"L\"],\n        [\"right ↻\", \"R\"],\n      ],\n    },\n  ],\n  inputsInline: true,\n  previousStatement: null,\n  nextStatement: null,\n  colour: 285,\n  tooltip: \"Turn to the specified direction\",\n  helpUrl: \"\",\n  generatorCallback: (block) =>\n    block.getFieldValue(\"direction\") === \"L\" ? \"turnLeft();\\n\" : \"turnRight();\\n\",\n};\n\n// source: https://blockly-demo.appspot.com/static/demos/blockfactory/index.html#m5x4ff\nexport const controlsIfPath: BlocklyComponent = {\n  type: \"controls_if_path\",\n  message0: \"if path %1 %2 %3 do %4\",\n  args0: [\n    {\n      type: \"input_dummy\",\n    },\n    {\n      type: \"field_dropdown\",\n      name: \"direction\",\n      options: [\n        [\"ahead\", \"A\"],\n        [\"to the left ↺\", \"L\"],\n        [\"to the right ↻\", \"R\"],\n      ],\n    },\n    {\n      type: \"input_dummy\",\n    },\n    {\n      type: \"input_statement\",\n      name: \"statement\",\n    },\n  ],\n  inputsInline: true,\n  previousStatement: null,\n  nextStatement: null,\n  colour: 210,\n  tooltip: \"Execute the 'do' statement if is possible to go to the specified direction\",\n  helpUrl: \"\",\n  generatorCallback: (block) => {\n    const direction = block.getFieldValue(\"direction\");\n    const condition =\n      direction === \"A\"\n        ? \"isPathForward()\"\n        : direction === \"L\"\n        ? \"isPathToLeft()\"\n        : \"isPathToRight()\";\n\n    return `if (${condition}) {\n  ${(window as any).Blockly.JavaScript.statementToCode(block, \"statement\") || \"\"}\n}`;\n  },\n};\n\n// source: https://blockly-demo.appspot.com/static/demos/blockfactory/index.html#buty92\nexport const controlsIfElsePath: BlocklyComponent = {\n  type: \"controls_if_else_path\",\n  message0: \"if path %1 %2 %3 do %4 else %5\",\n  args0: [\n    {\n      type: \"input_dummy\",\n    },\n    {\n      type: \"field_dropdown\",\n      name: \"direction\",\n      options: [\n        [\"ahead\", \"A\"],\n        [\"to the left ↺\", \"L\"],\n        [\"to the right ↻\", \"R\"],\n      ],\n    },\n    {\n      type: \"input_dummy\",\n    },\n    {\n      type: \"input_statement\",\n      name: \"truthy_statement\",\n    },\n    {\n      type: \"input_statement\",\n      name: \"falsy_statement\",\n    },\n  ],\n  inputsInline: true,\n  previousStatement: null,\n  nextStatement: null,\n  colour: 210,\n  tooltip:\n    \"Execute the 'do' statement if is possible to go to the specified direction. Otherwise, it executes the 'else' statement.\",\n  helpUrl: \"\",\n  generatorCallback: (block) => {\n    const direction = block.getFieldValue(\"direction\");\n    const condition =\n      direction === \"A\"\n        ? \"isPathForward()\"\n        : direction === \"L\"\n        ? \"isPathToLeft()\"\n        : \"isPathToRight()\";\n\n    return `if (${condition}) {\n  ${(window as any).Blockly.JavaScript.statementToCode(block, \"truthy_statement\") || \"\"}\n} else {\n  ${(window as any).Blockly.JavaScript.statementToCode(block, \"falsy_statement\") || \"\"}\n}`;\n  },\n};\n\n// source: https://blockly-demo.appspot.com/static/demos/blockfactory/index.html#9ag263\nexport const controlsRepeatUntilReachEnd: BlocklyComponent = {\n  type: \"controls_repeat_until_reach_end\",\n  message0: \"repeat until ⚐ %1 do %2\",\n  args0: [\n    {\n      type: \"input_dummy\",\n    },\n    {\n      type: \"input_statement\",\n      name: \"statement\",\n    },\n  ],\n  previousStatement: null,\n  nextStatement: null,\n  colour: 120,\n  tooltip: \"Repeat the inside code until end is reached\",\n  helpUrl: \"\",\n  generatorCallback: (block) => `while (notDone()) {\n  ${(window as any).Blockly.JavaScript.statementToCode(block, \"statement\") || \"\"}\n}`,\n};\n\nconst customBlocks = {\n  movementForward,\n  movementRotate,\n  controlsIfPath,\n  controlsIfElsePath,\n  controlsRepeatUntilReachEnd,\n};\n\nexport default customBlocks;\n","import {\n  movementForward,\n  movementRotate,\n  controlsIfPath,\n  controlsIfElsePath,\n  controlsRepeatUntilReachEnd,\n  BlocklyComponent,\n} from \"./customBlocks\";\n\nexport interface Challenge {\n  toolbox: ToolboxConfig;\n  map: Map;\n  blockly: IBlockly;\n}\n\nexport interface ToolboxConfig {\n  blocks: {\n    builtin?: string[];\n    custom?: BlocklyComponent[];\n  };\n}\n\nexport interface Map {\n  size: {\n    rows: number;\n    columns: number;\n  };\n  path: MapPoint[];\n  start: MapPoint;\n  finish: MapPoint;\n}\n\nexport interface MapPoint {\n  x: number; // x axis coordinate from the left\n  y: number; // y axis coordinate from the top\n}\n\nexport interface IBlockly {\n  maxBlocks?: number;\n}\n\nconst challenges: Challenge[] = [\n  {\n    toolbox: {\n      blocks: {\n        builtin: [],\n        custom: [movementForward, movementRotate],\n      },\n    },\n    map: {\n      size: { rows: 20, columns: 20 },\n      path: [\n        { x: 9, y: 10 },\n        { x: 10, y: 10 },\n        { x: 11, y: 10 },\n      ],\n      start: { x: 9, y: 10 },\n      finish: { x: 11, y: 10 },\n    },\n    blockly: {},\n  },\n  {\n    toolbox: {\n      blocks: {\n        builtin: [],\n        custom: [movementForward, movementRotate, controlsRepeatUntilReachEnd],\n      },\n    },\n    map: {\n      size: { rows: 20, columns: 20 },\n      path: [\n        { x: 9, y: 10 },\n        { x: 10, y: 10 },\n        { x: 11, y: 10 },\n        { x: 11, y: 9 },\n        { x: 11, y: 8 },\n        { x: 11, y: 7 },\n        { x: 11, y: 6 },\n        { x: 11, y: 5 },\n      ],\n      start: { x: 9, y: 10 },\n      finish: { x: 11, y: 5 },\n    },\n    blockly: {\n      maxBlocks: 5,\n    },\n  },\n  {\n    toolbox: {\n      blocks: {\n        builtin: [],\n        custom: [movementForward, movementRotate, controlsIfPath, controlsRepeatUntilReachEnd],\n      },\n    },\n    map: {\n      size: { rows: 20, columns: 20 },\n      path: [\n        { x: 9, y: 10 },\n        { x: 10, y: 10 },\n        { x: 11, y: 10 },\n        { x: 12, y: 10 },\n        { x: 12, y: 9 },\n        { x: 12, y: 8 },\n        { x: 12, y: 7 },\n        { x: 12, y: 6 },\n        { x: 12, y: 5 },\n        { x: 11, y: 5 },\n        { x: 10, y: 5 },\n        { x: 9, y: 5 },\n        { x: 8, y: 5 },\n        { x: 7, y: 5 },\n        { x: 6, y: 5 },\n        { x: 6, y: 6 },\n        { x: 6, y: 7 },\n        { x: 6, y: 8 },\n        { x: 6, y: 9 },\n        { x: 6, y: 10 },\n      ],\n      start: { x: 9, y: 10 },\n      finish: { x: 6, y: 10 },\n    },\n    blockly: {\n      maxBlocks: 4,\n    },\n  },\n  {\n    toolbox: {\n      blocks: {\n        builtin: [],\n        custom: [movementForward, movementRotate, controlsIfPath, controlsRepeatUntilReachEnd],\n      },\n    },\n    map: {\n      size: { rows: 20, columns: 20 },\n      path: [\n        { x: 8, y: 10 },\n        { x: 9, y: 10 },\n        { x: 10, y: 10 },\n        { x: 11, y: 10 },\n        { x: 11, y: 9 },\n        { x: 11, y: 8 },\n        { x: 11, y: 7 },\n        { x: 11, y: 6 },\n        { x: 11, y: 5 },\n        { x: 11, y: 4 },\n        { x: 12, y: 4 },\n        { x: 13, y: 4 },\n        { x: 14, y: 4 },\n      ],\n      start: { x: 8, y: 10 },\n      finish: { x: 14, y: 4 },\n    },\n    blockly: {\n      maxBlocks: 6,\n    },\n  },\n  {\n    toolbox: {\n      blocks: {\n        builtin: [],\n        custom: [\n          movementForward,\n          movementRotate,\n          controlsIfPath,\n          controlsIfElsePath,\n          controlsRepeatUntilReachEnd,\n        ],\n      },\n    },\n    map: {\n      size: { rows: 20, columns: 20 },\n      path: [\n        { x: 10, y: 12 },\n        { x: 11, y: 12 },\n        { x: 12, y: 12 },\n        { x: 13, y: 12 },\n        { x: 13, y: 11 },\n        { x: 13, y: 10 },\n        { x: 13, y: 9 },\n        { x: 13, y: 8 },\n        { x: 13, y: 7 },\n        { x: 13, y: 6 },\n        { x: 13, y: 5 },\n        { x: 13, y: 4 },\n        { x: 12, y: 4 },\n        { x: 11, y: 4 },\n        { x: 10, y: 4 },\n        { x: 9, y: 4 },\n        { x: 8, y: 4 },\n        { x: 7, y: 4 },\n        { x: 6, y: 4 },\n        { x: 5, y: 4 },\n        { x: 4, y: 4 },\n        { x: 3, y: 4 },\n        { x: 2, y: 4 },\n        { x: 1, y: 4 },\n\n        //little quare y:\n        { x: 12, y: 6 },\n        { x: 11, y: 6 },\n        { x: 11, y: 5 },\n\n        //path to the right\n        { x: 8, y: 3 },\n        { x: 8, y: 2 },\n        { x: 8, y: 1 },\n        { x: 9, y: 1 },\n        { x: 10, y: 1 },\n\n        //path to the left\n        { x: 5, y: 5 },\n        { x: 5, y: 6 },\n        { x: 5, y: 7 },\n        { x: 5, y: 8 },\n        { x: 5, y: 9 },\n        { x: 5, y: 10 },\n        { x: 5, y: 11 },\n        { x: 5, y: 12 },\n        { x: 4, y: 10 },\n        { x: 3, y: 10 },\n        { x: 6, y: 10 },\n        { x: 7, y: 10 },\n      ],\n      start: { x: 10, y: 12 },\n      finish: { x: 1, y: 4 },\n    },\n    blockly: {\n      maxBlocks: 7,\n    },\n  },\n];\n\nexport default challenges;\n","import styled from \"styled-components\";\n\nexport const Game = styled.div`\n  overflow-x: auto;\n  background-color: ${(props) => props.theme.colors.game.background};\n  border: 1px solid ${(props) => props.theme.colors.map.path};\n  position: relative;\n\n  --animation-duration: 250ms;\n`;\n\nexport const RemainingBlocksContainer = styled.div`\n  position: absolute;\n  bottom: 0;\n  font-size: 1rem;\n  color: ${(props) => props.theme.colors.text};\n  text-shadow: 0 0 0.1rem rgba(0, 0, 0, 0.3);\n  padding: 0.2rem;\n`;\n","import styled from \"styled-components\";\n\nimport { PlayerCoordinates } from \"../../util/getInitialPlayerCoordinates\";\n\ninterface ColumnProps {\n  mapDimensions: MapDimensions;\n}\n\ninterface MapDimensions {\n  columns: number;\n  rows: number;\n  width: number;\n}\n\nexport const Map = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 1rem;\n  background-color: ${(props) => props.theme.colors.map.background};\n  position: relative;\n  user-select: none;\n`;\n\nexport const Row = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nexport const Column = styled.div<ColumnProps>`\n  --columns: ${(props) => props.mapDimensions.columns};\n  --rows: ${(props) => props.mapDimensions.rows};\n  --map-width: ${(props) => props.mapDimensions.width};\n  --color-extern: ${(props) => props.theme.colors.map.background};\n  --color-path: ${(props) => props.theme.colors.map.path.background};\n  --color-path-line: ${(props) => props.theme.colors.map.path.border};\n  --square-size: calc((1px * var(--map-width) - 2rem) / var(--columns));\n\n  width: calc(100% / var(--columns));\n  height: var(--square-size);\n\n  &.path,\n  &.finish,\n  &.start {\n    background-color: var(--color-path);\n    border-top: 1px solid var(--color-path-line);\n    border-right: 1px solid var(--color-path-line);\n  }\n\n  &.extern {\n    background-color: var(--color-extern);\n  }\n\n  &.finish {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: calc(var(--square-size) * 0.9);\n    color: ${(props) => props.theme.colors.primary};\n  }\n`;\n\ninterface PlayerProps {\n  coordinates: PlayerCoordinates;\n  mapDimensions: MapDimensions;\n}\n\nexport const Player = styled.div<PlayerProps>`\n  width: calc(100% / var(--columns));\n  height: var(--square-size);\n  position: absolute;\n  left: calc(var(--column) * var(--square-size) + 1rem);\n  top: calc(var(--row) * var(--square-size) + 1rem);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transform: rotateZ(calc(var(--angle) * -1deg));\n  line-height: var(--square-size);\n  overflow: hidden;\n\n  --row: ${(props) => props.coordinates.position.y};\n  --column: ${(props) => props.coordinates.position.x};\n  --angle: ${(props) => props.coordinates.angle};\n  --columns: ${(props) => props.mapDimensions.columns};\n  --map-width: ${(props) => props.mapDimensions.width};\n  --square-size: calc((1px * var(--map-width) - 2rem) / var(--columns));\n\n  &.running {\n    transition-duration: var(--animation-duration);\n  }\n\n  &.collision {\n    color: ${(props) => props.theme.colors.player.collision};\n  }\n\n  &.finish {\n    color: ${(props) => props.theme.colors.player.finish};\n  }\n`;\n","import { GameStatus } from \"../components/Game\";\n\nexport default function gameStatusToString(status: GameStatus) {\n  switch (status) {\n    case GameStatus.Running:\n      return \"running\";\n    case GameStatus.Stop:\n      return \"stop\";\n    case GameStatus.Collision:\n      return \"collision\";\n    case GameStatus.Fail:\n      return \"fail\";\n    case GameStatus.Finish:\n      return \"finish\";\n  }\n}\n","import React, { useState, useEffect } from \"react\";\n\nimport { Map, Row, Column, Player } from \"./styles\";\nimport { GameStatus } from \"../Game\";\nimport { Map as IMap } from \"../../util/challenges\";\nimport { PlayerCoordinates } from \"../../util/getInitialPlayerCoordinates\";\nimport makeMapMatrix from \"../../util/makeMapMatrix\";\nimport gameStatusToString from \"../../util/gameStatusToString\";\n\nexport interface Props {\n  gameStatus: GameStatus;\n  map: IMap;\n  player: PlayerCoordinates;\n}\n\nexport default function Maps({ gameStatus, map, player }: Props) {\n  const [mapWidth, setMapWidth] = useState(0);\n\n  useEffect(() => {\n    function updateMapWidth() {\n      const mapElement = document.querySelector(\".map\");\n      const { width } = mapElement ? window.getComputedStyle(mapElement) : { width: \"0\" };\n      setMapWidth(parseInt(width || \"0\"));\n    }\n\n    updateMapWidth();\n\n    window.addEventListener(\"resize\", updateMapWidth);\n    return () => window.removeEventListener(\"resize\", updateMapWidth);\n  }, [setMapWidth]);\n\n  const rows = map.size.rows;\n  const columns = map.size.columns;\n\n  const mapMatrix = makeMapMatrix({ map, rows, columns });\n\n  const mapDimensiosn = {\n    columns: columns,\n    rows: rows,\n    width: mapWidth,\n  };\n\n  return (\n    <Map className=\"map\">\n      {mapMatrix.map((row, index) => (\n        <Row key={`row-${index}`}>\n          {row.map((column, index) => (\n            <Column\n              mapDimensions={mapDimensiosn}\n              key={`column-${index}`}\n              className={`column ${column}`}\n            >\n              {column === \"finish\" ? \"⚐\" : \"\"}\n            </Column>\n          ))}\n        </Row>\n      ))}\n      <Player\n        mapDimensions={mapDimensiosn}\n        coordinates={player}\n        className={gameStatusToString(gameStatus)}\n      >\n        ➤\n      </Player>\n    </Map>\n  );\n}\n","import { Map } from \"./challenges\";\n\nexport interface Params {\n  map: Map;\n  rows: number;\n  columns: number;\n}\n\nexport default function makeMapMatrix({ map, rows, columns }: Params) {\n  const mapMatrix: string[][] = [];\n\n  for (let row = 0; row < rows; row++) {\n    mapMatrix[row] = [];\n    mapMatrix[row].length = columns;\n  }\n\n  for (let row = 0; row < rows; row++)\n    for (let column = 0; column < columns; column++) {\n      const found = map.path.find((point) => point.x === column && point.y === row);\n      mapMatrix[row][column] = found ? \"path\" : \"extern\";\n    }\n\n  if (map.start) mapMatrix[map.start.y][map.start.x] = \"start\";\n  if (map.finish) mapMatrix[map.finish.y][map.finish.x] = \"finish\";\n\n  return mapMatrix;\n}\n","import { PlayerCoordinates } from \"./getInitialPlayerCoordinates\";\nimport { Map } from \"./challenges\";\n\nexport interface Params {\n  player: PlayerCoordinates;\n  map: Map;\n}\n\nexport default function checkFinish({ player, map }: Params) {\n  return player.position.x === map.finish.x && player.position.y === map.finish.y;\n}\n","export interface Coordinate {\n  x: number;\n  y: number;\n}\n\nexport default function hasCoordinate({ x, y }: Coordinate, list: Coordinate[]) {\n  if (!Array.isArray(list)) return false;\n\n  const found = list.find((e) => e.x === x && e.y === y);\n  return found !== undefined;\n}\n","import React from \"react\";\nimport Blockly from \"blockly\";\n\nimport checkFinish from \"./checkFinish\";\nimport hasCoordinate from \"./hasCoordinate\";\nimport { PlayerCoordinates } from \"./getInitialPlayerCoordinates\";\nimport { Map } from \"./challenges\";\n\nexport interface This {\n  player: PlayerCoordinates;\n  map: Map;\n  workspace: Blockly.WorkspaceSvg | null;\n  refresh: React.Dispatch<React.SetStateAction<object>>;\n}\n\nexport interface ApiFunctions {\n  forward(this: This): void;\n  turnLeft(this: This): void;\n  turnRight(this: This): void;\n  notDone(this: This): boolean;\n  isPathForward(this: This): boolean;\n  isPathToLeft(this: This): boolean;\n  isPathToRight(this: This): boolean;\n  highlightBlock(this: This, id: string): void;\n}\n\nexport function forward(this: This) {\n  if (this.workspace) (this as any).workspace.lastExecutedFunction = \"forward\";\n\n  const angle = Math.abs((this.player.angle % 360) + 360) % 360;\n  const x = this.player.position.x;\n  const y = this.player.position.y;\n  const { columns, rows } = this.map.size;\n\n  if (angle === 0 && x + 1 < columns) this.player.position.x++;\n  else if (angle === 90 && y) this.player.position.y--;\n  else if (angle === 180 && x) this.player.position.x--;\n  else if (angle === 270 && y + 1 < rows) this.player.position.y++;\n\n  this.refresh({});\n}\n\nexport function turnLeft(this: This) {\n  (this as any).workspace.lastExecutedFunction = \"turnLeft\";\n\n  this.player.angle += 90;\n  this.refresh({});\n}\n\nexport function turnRight(this: This) {\n  (this as any).workspace.lastExecutedFunction = \"turnRight\";\n\n  this.player.angle -= 90;\n  this.refresh({});\n}\n\nexport function notDone(this: This) {\n  (this as any).workspace.lastExecutedFunction = \"notDone\";\n\n  return !checkFinish({ player: this.player, map: this.map });\n}\n\nfunction hasPathForward(angle: number, player: PlayerCoordinates, map: Map) {\n  angle = Math.abs((angle % 360) + 360) % 360;\n  const x = player.position.x;\n  const y = player.position.y;\n  const { columns, rows } = map.size;\n\n  if (angle === 0) return x < columns - 1 && hasCoordinate({ x: x + 1, y }, map.path);\n  if (angle === 90) return y > 0 && hasCoordinate({ x: x, y: y - 1 }, map.path);\n  if (angle === 180) return x > 0 && hasCoordinate({ x: x - 1, y }, map.path);\n  if (angle === 270) return y < rows - 1 && hasCoordinate({ x: x, y: y + 1 }, map.path);\n\n  return false;\n}\n\nexport function isPathForward(this: This) {\n  (this as any).workspace.lastExecutedFunction = \"isPathForward\";\n\n  return hasPathForward(this.player.angle, this.player, this.map);\n}\n\nexport function isPathToLeft(this: This) {\n  (this as any).workspace.lastExecutedFunction = \"isPathToLeft\";\n\n  return hasPathForward(this.player.angle + 90, this.player, this.map);\n}\n\nexport function isPathToRight(this: This) {\n  (this as any).workspace.lastExecutedFunction = \"isPathToRight\";\n\n  return hasPathForward(this.player.angle - 90, this.player, this.map);\n}\n\nexport function highlightBlock(this: This, id: string) {\n  (this as any).workspace.highlightBlock(id);\n}\n\nconst functions: ApiFunctions = {\n  forward,\n  turnLeft,\n  turnRight,\n  notDone,\n  isPathForward,\n  isPathToLeft,\n  isPathToRight,\n  highlightBlock,\n};\n\nexport default functions;\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport Blockly from \"blockly\";\r\n\r\nimport { Game, RemainingBlocksContainer } from \"./styles\";\r\nimport Map from \"../Map\";\r\nimport apiFunctions, { ApiFunctions } from \"../../util/apiFunctions\";\r\nimport checkCollision from \"../../util/checkCollision\";\r\nimport { Map as IMap } from \"../../util/challenges\";\r\nimport { PlayerCoordinates } from \"../../util/getInitialPlayerCoordinates\";\r\nimport { This } from \"../../util/apiFunctions\";\r\n\r\nexport enum GameStatus {\r\n  Running,\r\n  Stop,\r\n  Collision,\r\n  Fail,\r\n  Finish,\r\n}\r\n\r\nexport interface Props {\r\n  gameRef: React.MutableRefObject<GameRef | null>;\r\n  gameStatus: GameStatus;\r\n  onGameStatusChange(status: GameStatus): void;\r\n  map: IMap;\r\n  player: PlayerCoordinates;\r\n  blocklyWorkspaceRef: React.MutableRefObject<Blockly.WorkspaceSvg | null>;\r\n  remainingBlocks: number;\r\n}\r\n\r\nexport interface GameRef {\r\n  interpreterInitHandler(interpreter: object, globalObject: object): void;\r\n}\r\n\r\nexport default function Games({\r\n  gameRef,\r\n  gameStatus,\r\n  onGameStatusChange,\r\n  map,\r\n  player,\r\n  blocklyWorkspaceRef,\r\n  remainingBlocks,\r\n}: Props) {\r\n  const [, setRefresh] = useState<object>({});\r\n\r\n  useEffect(() => {\r\n    if (!map.start) return;\r\n\r\n    player.position.x = map.start.x;\r\n    player.position.y = map.start.y;\r\n  }, [map, player]);\r\n\r\n  const refresh = useCallback(() => {\r\n    if (checkCollision({ player, map })) {\r\n      onGameStatusChange(GameStatus.Collision);\r\n    }\r\n\r\n    setRefresh({});\r\n  }, [setRefresh, onGameStatusChange, player, map]);\r\n\r\n  function interpreterInitHandler(interpreter: object, globalObject: object) {\r\n    const that: This = {\r\n      player,\r\n      map,\r\n      workspace: blocklyWorkspaceRef.current,\r\n      refresh,\r\n    };\r\n\r\n    Object.keys(apiFunctions).forEach((key) => {\r\n      (interpreter as any).setProperty(\r\n        globalObject,\r\n        key,\r\n        (interpreter as any).createNativeFunction(\r\n          apiFunctions[key as keyof ApiFunctions].bind(that)\r\n        )\r\n      );\r\n    });\r\n  }\r\n\r\n  gameRef.current = { interpreterInitHandler };\r\n\r\n  return (\r\n    <Game className=\"game\">\r\n      <Map gameStatus={gameStatus} player={player} map={map} />\r\n      {remainingBlocks !== Infinity && (\r\n        <RemainingBlocksContainer>{`Remaining blocks: ${remainingBlocks}`}</RemainingBlocksContainer>\r\n      )}\r\n    </Game>\r\n  );\r\n}\r\n","import { PlayerCoordinates } from \"./getInitialPlayerCoordinates\";\nimport { Map } from \"./challenges\";\n\nexport interface Params {\n  player: PlayerCoordinates;\n  map: Map;\n}\n\nexport default function checkCollision({ player, map }: Params) {\n  for (let i = 0; i < map.path.length; i++)\n    if (map.path[i].x === player.position.x && map.path[i].y === player.position.y) return false;\n\n  return true;\n}\n","import styled from \"styled-components\";\n\nexport const PagingList = styled.ul`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const PagingItem = styled.li`\n  list-style: none;\n  font-size: 1rem;\n  padding: 0.5rem 1rem;\n  background-color: ${(props) => props.theme.colors.secondary};\n  color: white;\n  margin-right: 1rem;\n  cursor: pointer;\n  user-select: none;\n  box-shadow: 0 0.2rem 0.4rem rgba(0, 0, 0, 0.3);\n\n  &:last-child {\n    margin-right: 0;\n  }\n\n  &[data-selected=\"true\"] {\n    pointer-events: none;\n    background-color: ${(props) => props.theme.colors.primary};\n  }\n`;\n","import \"./styles.ts\";\n\nimport { PagingList, PagingItem } from \"./styles\";\n\nexport interface Props {\n  total: number;\n  current: number;\n  onChange(index: number): void;\n}\n\nexport default function PaginList({ total, current, onChange }: Props) {\n  const start = total > 5 ? (current - 2 < 1 ? 1 : current - 2) : 1;\n  const end = total > 5 ? (start + 4 > total ? total : start + 4) : total;\n\n  const indexes = [];\n  for (let i = start; i <= end; i++) indexes.push(i);\n\n  return (\n    <PagingList className=\"paging-list\">\n      {indexes.map((i) => (\n        <PagingItem key={`${i}`} data-selected={i === current} onClick={() => onChange(i)}>\n          {i}\n        </PagingItem>\n      ))}\n    </PagingList>\n  );\n}\n","import { MapPoint } from \"./challenges\";\n\nexport interface PlayerCoordinates {\n  angle: number;\n  position: MapPoint;\n}\n\nexport default function getInitialPlayerCoordinates(start?: MapPoint): PlayerCoordinates {\n  const x = start ? start.x : 0;\n  const y = start ? start.y : 0;\n\n  return {\n    angle: 0,\n    position: { x, y },\n  };\n}\n","import React, { useState, useMemo, useRef, useEffect } from \"react\";\r\nimport BlocklyWidget from \"./components/BlocklyWidget\";\r\nimport Blockly from \"blockly\";\r\n\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport lightTheme from \"./styles/theme/light\";\r\nimport GlobalStyle from \"./styles/global\";\r\nimport { App, AppGlobal, GameButtonContainer, Button } from \"./styles\";\r\n\r\nimport challenges from \"./util/challenges\";\r\nimport Game, { GameStatus, GameRef } from \"./components/Game\";\r\nimport PagingList from \"./components/PagingList\";\r\nimport checkCollision from \"./util/checkCollision\";\r\nimport checkFinish from \"./util/checkFinish\";\r\nimport getInitialPlayerCoordinates from \"./util/getInitialPlayerCoordinates\";\r\nimport gameStatusToString from \"./util/gameStatusToString\";\r\n\r\nconst instructionStepDelay = 500; // milliseconds\r\n\r\nexport default function Apps() {\r\n  const [challengeIndex, setChallengeIndex] = useState<number>(0);\r\n  const [gameStatus, setGameStatus] = useState<GameStatus>(GameStatus.Stop);\r\n  const [remainingBlocks, setRemainingBlocks] = useState<number>(Infinity);\r\n  const blocklyWorkspaceRef = useRef<Blockly.WorkspaceSvg | null>(null);\r\n  const gameRef = useRef<GameRef | null>(null);\r\n  const player = useMemo(getInitialPlayerCoordinates, []);\r\n  const simulationStatus = useMemo(() => ({ status: GameStatus.Stop }), []);\r\n\r\n  useEffect(() => {\r\n    simulationStatus.status = gameStatus;\r\n  }, [gameStatus, simulationStatus]);\r\n\r\n  useEffect(turnLastHighlightedBlockOff, [gameStatus]);\r\n\r\n  const blocklyToolboxConfig = useMemo(() => {\r\n    return challenges[challengeIndex].toolbox;\r\n  }, [challengeIndex]);\r\n\r\n  const blocklyConfig = useMemo(() => {\r\n    return challenges[challengeIndex].blockly;\r\n  }, [challengeIndex]);\r\n\r\n  const map = useMemo(() => {\r\n    return challenges[challengeIndex].map;\r\n  }, [challengeIndex]);\r\n\r\n  function turnLastHighlightedBlockOff() {\r\n    if (blocklyWorkspaceRef.current) blocklyWorkspaceRef.current.highlightBlock(\"\");\r\n  }\r\n\r\n  function needExecutionDelay() {\r\n    if (!blocklyWorkspaceRef.current) return false;\r\n\r\n    const delayedFunctions = [\"forward\", \"turnLeft\", \"turnRight\"];\r\n    const found = delayedFunctions.find(\r\n      (f) => f === (blocklyWorkspaceRef.current as any).lastExecutedFunction\r\n    );\r\n    (blocklyWorkspaceRef.current as any).lastExecutedFunction = \"\";\r\n    return found;\r\n  }\r\n\r\n  function handleRunClick() {\r\n    if (!blocklyWorkspaceRef.current || !gameRef.current) return;\r\n\r\n    const code: string = (Blockly as any).JavaScript.workspaceToCode(blocklyWorkspaceRef.current);\r\n    const interpreter = new (window as any).Interpreter(\r\n      code,\r\n      (gameRef.current as any).interpreterInitHandler\r\n    );\r\n\r\n    function endOfSimulation() {\r\n      if (checkCollision({ player, map })) setGameStatus(GameStatus.Collision);\r\n      else if (checkFinish({ player, map })) setGameStatus(GameStatus.Finish);\r\n      else setGameStatus(GameStatus.Fail);\r\n    }\r\n\r\n    simulationStatus.status = GameStatus.Running;\r\n    setGameStatus(GameStatus.Running);\r\n\r\n    function nextStep() {\r\n      if (simulationStatus.status !== GameStatus.Running) return;\r\n\r\n      if (interpreter.step()) setTimeout(nextStep, needExecutionDelay() ? instructionStepDelay : 0);\r\n      else endOfSimulation();\r\n    }\r\n\r\n    nextStep();\r\n  }\r\n\r\n  function handleStopResetClick() {\r\n    Object.assign(player, getInitialPlayerCoordinates(challenges[challengeIndex].map.start));\r\n    setGameStatus(GameStatus.Stop);\r\n  }\r\n\r\n  function handleNextClick() {\r\n    if (challengeIndex + 1 < challenges.length) {\r\n      setChallengeIndex(challengeIndex + 1);\r\n      Object.assign(player, getInitialPlayerCoordinates(challenges[challengeIndex + 1].map.start));\r\n      setGameStatus(GameStatus.Stop);\r\n    }\r\n  }\r\n\r\n  function handlePagingClick(pageIndex: number) {\r\n    setChallengeIndex(pageIndex - 1);\r\n    Object.assign(player, getInitialPlayerCoordinates(challenges[pageIndex - 1].map.start));\r\n    setGameStatus(GameStatus.Stop);\r\n  }\r\n\r\n  function handleButtonClick() {\r\n    switch (gameStatus) {\r\n      case GameStatus.Running:\r\n        handleStopResetClick();\r\n        break;\r\n      case GameStatus.Stop:\r\n        handleRunClick();\r\n        break;\r\n      case GameStatus.Collision:\r\n        handleStopResetClick();\r\n        break;\r\n      case GameStatus.Fail:\r\n        handleStopResetClick();\r\n        break;\r\n      case GameStatus.Finish:\r\n        handleNextClick();\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={lightTheme}>\r\n      <App className=\"app\">\r\n        <GlobalStyle />\r\n        <AppGlobal />\r\n        <GameButtonContainer className=\"game-button-container\">\r\n          <PagingList\r\n            total={challenges.length}\r\n            current={challengeIndex + 1}\r\n            onChange={handlePagingClick}\r\n          />\r\n          <Game\r\n            remainingBlocks={remainingBlocks}\r\n            gameRef={gameRef}\r\n            gameStatus={gameStatus}\r\n            onGameStatusChange={setGameStatus}\r\n            map={map}\r\n            player={player}\r\n            blocklyWorkspaceRef={blocklyWorkspaceRef}\r\n          />\r\n          <Button\r\n            onClick={handleButtonClick}\r\n            className={`run-button ${gameStatusToString(gameStatus)}`}\r\n          />\r\n        </GameButtonContainer>\r\n        <BlocklyWidget\r\n          setRemainingBlocks={setRemainingBlocks}\r\n          blocklyToolboxConfig={blocklyToolboxConfig}\r\n          blocklyConfig={blocklyConfig}\r\n          blocklyWorkspaceRef={blocklyWorkspaceRef}\r\n        />\r\n      </App>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
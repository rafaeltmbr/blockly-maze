{"version":3,"sources":["components/BlocklyWidget/index.js","util/customBlocks.js","util/challenges.js","components/Game/index.js","App.js","index.js"],"names":["memo","toolboxConfig","workspaceRef","style","useState","workspace","setWorkspace","blocks","useEffect","window","Blockly","Array","isArray","custom","forEach","block","Blocks","type","init","this","jsonInit","JavaScript","generatorCallback","toolbox","useMemo","builtin","kind","contents","push","inject","document","querySelector","trashcan","dispose","bind","current","className","movementForward","message0","previousStatement","nextStatement","colour","tooltip","helpUrl","movementRotate","args0","name","options","inputsInline","getFieldValue","challenges","map","size","rows","columns","path","start","finish","player","angle","position","Game","gameRef","mapWidth","setMapWidth","setRefresh","refreshScreen","useCallback","forward","console","log","turnLeft","turnRight","gameAPIList","interpreterInitHandler","interpreter","globalObject","Object","keys","key","setProperty","createNativeFunction","updateMapWidth","width","getComputedStyle","parseInt","addEventListener","removeEventListener","mapMatrix","mapMatrixRows","mapMatrixColumns","row","length","column","found","find","point","index","App","challengeIndex","useRef","game","onClick","code","workspaceToCode","Interpreter","nextStep","step","setTimeout","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.90412b82.chunk.js","sourcesContent":["import React, { useEffect, useState, useMemo, memo } from \"react\";\nimport Blockly from \"blockly\";\n\nimport \"./styles.sass\";\n\nexport default memo(function BlocklyWidget({ toolboxConfig, workspaceRef, style }) {\n  const [workspace, setWorkspace] = useState(null);\n\n  const blocks = toolboxConfig && toolboxConfig.blocks;\n\n  useEffect(() => {\n    window.Blockly = Blockly;\n  });\n\n  useEffect(() => {\n    if (!blocks || !Array.isArray(blocks.custom)) return;\n\n    blocks.custom.forEach((block) => {\n      Blockly.Blocks[block.type] = {\n        init: function () {\n          this.jsonInit(block);\n        },\n      };\n\n      Blockly.JavaScript[block.type] = block.generatorCallback;\n    });\n  }, [workspace, blocks]);\n\n  const toolbox = useMemo(() => {\n    if (!blocks || (!blocks.builtin && !blocks.custom)) return;\n\n    const toolbox = {\n      kind: \"flyoutToolbox\",\n      contents: [],\n    };\n\n    if (blocks.builtin && Array.isArray(blocks.builtin))\n      blocks.builtin.forEach((type) => toolbox.contents.push({ kind: \"block\", type }));\n\n    if (blocks.custom && Array.isArray(blocks.custom))\n      blocks.custom.forEach(({ type }) => toolbox.contents.push({ kind: \"block\", type }));\n\n    return toolbox;\n  }, [blocks]);\n\n  useEffect(() => {\n    const workspace = Blockly.inject(document.querySelector(\".blockly-div\"), {\n      toolbox,\n      trashcan: true,\n    });\n    setWorkspace(workspace);\n\n    return workspace.dispose.bind(workspace);\n  }, [toolbox]);\n\n  useEffect(() => {\n    workspaceRef.current = workspace;\n  }, [workspace, workspaceRef]);\n\n  return <div className=\"blockly-div\" style={style} />;\n});\n","// source: https://blockly-demo.appspot.com/static/demos/blockfactory/index.html#8wpthh\nexport const movementForward = {\n  type: \"movement_forward\",\n  message0: \"forward\",\n  previousStatement: null,\n  nextStatement: null,\n  colour: 285,\n  tooltip: \"Moves one step forward\",\n  helpUrl: \"\",\n  generatorCallback: () => \"forward();\\n\",\n};\n\n// source: https://blockly-demo.appspot.com/static/demos/blockfactory/index.html#83j9gt\nexport const movementRotate = {\n  type: \"movement_rotate\",\n  message0: \"turn %1 %2\",\n  args0: [\n    {\n      type: \"input_dummy\",\n    },\n    {\n      type: \"field_dropdown\",\n      name: \"direction\",\n      options: [\n        [\"left ↺\", \"L\"],\n        [\"right ↻\", \"R\"],\n      ],\n    },\n  ],\n  inputsInline: true,\n  previousStatement: null,\n  nextStatement: null,\n  colour: 285,\n  tooltip: \"Turn to the specified direction\",\n  helpUrl: \"\",\n  generatorCallback: (block) =>\n    block.getFieldValue(\"direction\") === \"L\" ? \"turnLeft();\\n\" : \"turnRight();\\n\",\n};\n\n// source: https://blockly-demo.appspot.com/static/demos/blockfactory/index.html#m5x4ff\nexport const controlsIfPath = {\n  type: \"controls_if_path\",\n  message0: \"if path %1 %2 %3 do %4\",\n  args0: [\n    {\n      type: \"input_dummy\",\n    },\n    {\n      type: \"field_dropdown\",\n      name: \"direction\",\n      options: [\n        [\"ahead\", \"A\"],\n        [\"to the left ↺\", \"L\"],\n        [\"to the right ↻\", \"R\"],\n      ],\n    },\n    {\n      type: \"input_dummy\",\n    },\n    {\n      type: \"input_statement\",\n      name: \"statement\",\n    },\n  ],\n  inputsInline: true,\n  previousStatement: null,\n  nextStatement: null,\n  colour: 210,\n  tooltip: \"Execute the 'do' statement if is possible to go to the specified direction\",\n  helpUrl: \"\",\n  generatorCallback: (block) => {\n    const direction = block.getFieldValue(\"direction\");\n    const condition =\n      direction === \"A\"\n        ? \"isPathForward()\"\n        : direction === \"L\"\n        ? \"isPathToLeft()\"\n        : \"isPathToRight()\";\n\n    return `if (${condition}) {\n  ${window.Blockly.JavaScript.statementToCode(block, \"statement\") || \"\"}\n}`;\n  },\n};\n\n// source: https://blockly-demo.appspot.com/static/demos/blockfactory/index.html#buty92\nexport const controlsIfElsePath = {\n  type: \"controls_if_else_path\",\n  message0: \"if path %1 %2 %3 do %4 else %5\",\n  args0: [\n    {\n      type: \"input_dummy\",\n    },\n    {\n      type: \"field_dropdown\",\n      name: \"direction\",\n      options: [\n        [\"ahead\", \"A\"],\n        [\"to the left ↺\", \"L\"],\n        [\"to the right ↻\", \"R\"],\n      ],\n    },\n    {\n      type: \"input_dummy\",\n    },\n    {\n      type: \"input_statement\",\n      name: \"truthy_statement\",\n    },\n    {\n      type: \"input_statement\",\n      name: \"falsy_statement\",\n    },\n  ],\n  inputsInline: true,\n  previousStatement: null,\n  nextStatement: null,\n  colour: 210,\n  tooltip:\n    \"Execute the 'do' statement if is possible to go to the specified direction. Otherwise, it executes the 'else' statement.\",\n  helpUrl: \"\",\n  generatorCallback: (block) => {\n    const direction = block.getFieldValue(\"direction\");\n    const condition =\n      direction === \"A\"\n        ? \"isPathForward()\"\n        : direction === \"L\"\n        ? \"isPathToLeft()\"\n        : \"isPathToRight()\";\n\n    return `if (${condition}) {\n  ${window.Blockly.JavaScript.statementToCode(block, \"truthy_statement\") || \"\"}\n} else {\n  ${window.Blockly.JavaScript.statementToCode(block, \"falsy_statement\") || \"\"}\n}`;\n  },\n};\n\n// source: https://blockly-demo.appspot.com/static/demos/blockfactory/index.html#9ag263\nexport const controlsRepeatUntilReachEnd = {\n  type: \"controls_repeat_until_reach_end\",\n  message0: \"repeat until ⚐ %1 do %2\",\n  args0: [\n    {\n      type: \"input_dummy\",\n    },\n    {\n      type: \"input_statement\",\n      name: \"statement\",\n    },\n  ],\n  previousStatement: null,\n  nextStatement: null,\n  colour: 120,\n  tooltip: \"Repeat the inside code until end is reached\",\n  helpUrl: \"\",\n  generatorCallback: (block) => `while (notDone()) {\n  ${window.Blockly.JavaScript.statementToCode(block, \"statement\") || \"\"}\n}`,\n};\n\nconst customBlocks = {\n  movementForward,\n  movementRotate,\n  controlsIfPath,\n  controlsIfElsePath,\n  controlsRepeatUntilReachEnd,\n};\n\nexport default customBlocks;\n","import {\n  movementForward,\n  movementRotate,\n  controlsIfPath,\n  controlsIfElsePath,\n  controlsRepeatUntilReachEnd,\n} from \"./customBlocks\";\n\nconst challenges = [\n  {\n    toolbox: {\n      blocks: {\n        builtin: [],\n        custom: [movementForward, movementRotate],\n      },\n    },\n    map: {\n      size: { rows: 20, columns: 20 },\n      path: [\n        [9, 10],\n        [10, 10],\n        [11, 10],\n      ],\n      start: [9, 10],\n      finish: [11, 10],\n    },\n  },\n];\n\nexport default challenges;\n","import React, { useState, useEffect, useCallback, useMemo } from \"react\";\n\nimport \"./styles.sass\";\n\nconst player = {\n  angle: 0,\n  position: [0, 0],\n};\n\nexport default function Game({ gameRef, map }) {\n  const [mapWidth, setMapWidth] = useState(0);\n  const [, setRefresh] = useState();\n\n  useEffect(() => {\n    if (!map.start) return;\n\n    player.position[0] = map.start[0];\n    player.position[1] = map.start[1];\n  }, [map.start]);\n\n  const refreshScreen = useCallback(() => {\n    setRefresh({});\n  }, [setRefresh]);\n\n  const forward = useCallback(() => {\n    console.log({ player });\n    if (player.angle === 0 && player.position[0] + 1 < map.size.columns) player.position[0]++;\n    else if (player.angle === 90 && player.position[1]) player.position[1]--;\n    else if (player.angle === 180 && player.position[0]) player.position[0]--;\n    else if (player.angle === 180 && player.position[1] + 1 < map.size.rows) player.position[1]++;\n\n    refreshScreen();\n\n    console.log(`exec: forward ${player.position}`);\n  }, [refreshScreen, map.size]);\n\n  const turnLeft = useCallback(() => {\n    player.angle = (player.angle + 90) % 360;\n    refreshScreen();\n    console.log(`exec: turnLeft ${player.angle}`);\n  }, [refreshScreen]);\n\n  const turnRight = useCallback(() => {\n    player.angle = (player.angle - 90 + 360) % 360;\n    refreshScreen();\n    console.log(`exec: turnRight ${player.angle}`);\n  }, [refreshScreen]);\n\n  const gameAPIList = useMemo(\n    () => ({\n      forward,\n      turnLeft,\n      turnRight,\n    }),\n    [forward, turnLeft, turnRight]\n  );\n\n  const interpreterInitHandler = useCallback(\n    (interpreter, globalObject) => {\n      Object.keys(gameAPIList).forEach((key) => {\n        interpreter.setProperty(\n          globalObject,\n          key,\n          interpreter.createNativeFunction(gameAPIList[key])\n        );\n      });\n    },\n    [gameAPIList]\n  );\n\n  useEffect(() => {\n    gameRef.current = { interpreterInitHandler };\n  }, [gameRef, interpreterInitHandler]);\n\n  useEffect(() => {\n    function updateMapWidth() {\n      const { width } = window.getComputedStyle(document.querySelector(\".game .map\"));\n      setMapWidth(parseInt(width) || 0);\n    }\n\n    updateMapWidth();\n\n    window.addEventListener(\"resize\", updateMapWidth);\n    return () => window.removeEventListener(\"resize\", updateMapWidth);\n  }, [setMapWidth]);\n\n  const mapMatrix = [];\n\n  const mapMatrixRows = map.size && map.size.rows ? map.size.rows : 10;\n  const mapMatrixColumns = map.size && map.size.columns ? map.size.columns : 10;\n\n  for (let row = 0; row < mapMatrixRows; row++) {\n    mapMatrix[row] = [];\n    mapMatrix[row].length = mapMatrixColumns;\n  }\n\n  for (let row = 0; row < mapMatrixRows; row++)\n    for (let column = 0; column < mapMatrixColumns; column++) {\n      const found = map.path.find((point) => point[0] === column && point[1] === row);\n      mapMatrix[row][column] = found ? \"path\" : \"extern\";\n    }\n\n  if (map.start) mapMatrix[map.start[1]][map.start[0]] = \"start\";\n  if (map.finish) mapMatrix[map.finish[1]][map.finish[0]] = \"finish\";\n\n  return (\n    <div className=\"game\">\n      <div\n        className=\"map\"\n        style={{ \"--columns\": mapMatrixColumns, \"--rows\": mapMatrixRows, \"--map-width\": mapWidth }}\n      >\n        {mapMatrix.map((row, index) => (\n          <div key={`row-${index}`} className=\"row\">\n            {row.map((column, index) => (\n              <div key={`column-${index}`} className={`column ${column}`}>\n                {column === \"finish\" ? \"⚐\" : \"\"}\n              </div>\n            ))}\n          </div>\n        ))}\n        <div\n          className=\"player\"\n          style={{\n            \"--column\": player.position[0],\n            \"--row\": player.position[1],\n            \"--angle\": -player.angle,\n          }}\n        >\n          ➤\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useMemo, useRef, useEffect } from \"react\";\nimport BlocklyWidget from \"./components/BlocklyWidget\";\nimport Blockly from \"blockly\";\n\nimport \"./App.sass\";\nimport challenges from \"./util/challenges\";\nimport Game from \"./components/Game\";\n\nexport default function App() {\n  const [challengeIndex, setChallengeIndex] = useState(0);\n  const workspace = useRef(null);\n  const game = useRef(null);\n\n  const toolboxConfig = useMemo(() => {\n    return challenges[challengeIndex] && challenges[challengeIndex].toolbox;\n  }, [challengeIndex]);\n\n  const map = useMemo(() => {\n    return challenges[challengeIndex] && challenges[challengeIndex].map;\n  }, [challengeIndex]);\n\n  function handleRunClick() {\n    if (!workspace.current) return;\n\n    const code = Blockly.JavaScript.workspaceToCode(workspace.current);\n    const interpreter = new window.Interpreter(\n      code,\n      game.current && game.current.interpreterInitHandler\n    );\n\n    function nextStep() {\n      if (interpreter.step()) setTimeout(nextStep, 200);\n    }\n\n    nextStep();\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"game-button-container\">\n        <Game gameRef={game} map={map} />\n        <button onClick={handleRunClick} className=\"run-button\">\n          Run\n        </button>\n      </div>\n      <BlocklyWidget toolboxConfig={toolboxConfig} workspaceRef={workspace} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
{"version":3,"sources":["components/BlocklyWidget/index.tsx","util/customBlocks.tsx","util/challenges.tsx","util/gameStatusToString.ts","components/Map/index.tsx","util/makeMapMatrix.ts","util/checkFinish.ts","util/hasCoordinate.ts","util/apiFunctions.ts","util/checkCollision.ts","components/Game/index.tsx","components/PagingList/index.tsx","util/getInitialPlayerCoordinates.ts","App.tsx","index.tsx"],"names":["memo","blocklyConfig","blocklyToolboxConfig","blocklyWorkspaceRef","setRemainingBlocks","style","useState","workspace","setWorkspace","blocks","useEffect","window","Blockly","custom","forEach","block","Blocks","type","init","this","jsonInit","JavaScript","generatorCallback","addChangeListener","remainingCapacity","toolbox","useMemo","builtin","kind","contents","Array","isArray","push","config","trashcan","blocklyDiv","document","querySelector","inject","STATEMENT_PREFIX","addReservedWords","dispose","bind","current","className","movementForward","message0","previousStatement","nextStatement","colour","tooltip","helpUrl","movementRotate","args0","name","options","inputsInline","getFieldValue","controlsIfPath","direction","statementToCode","controlsIfElsePath","controlsRepeatUntilReachEnd","challenges","map","size","rows","columns","path","x","y","start","finish","blockly","maxBlocks","gameStatusToString","status","GameStatus","Running","Stop","Collision","Fail","Finish","Map","gameStatus","player","mapWidth","setMapWidth","updateMapWidth","mapElement","width","getComputedStyle","parseInt","addEventListener","removeEventListener","mapMatrix","row","length","column","found","find","point","makeMapMatrix","mapStyle","playerStyle","position","angle","index","checkFinish","hasCoordinate","list","undefined","e","hasPathForward","Math","abs","functions","forward","lastExecutedFunction","refresh","turnLeft","turnRight","notDone","isPathForward","isPathToLeft","isPathToRight","highlightBlock","id","checkCollision","i","Game","gameRef","onGameStatusChange","remainingBlocks","setRefresh","useCallback","interpreterInitHandler","interpreter","globalObject","that","Object","keys","apiFunctions","key","setProperty","createNativeFunction","Infinity","PaginList","total","onChange","end","indexes","onClick","getInitialPlayerCoordinates","App","challengeIndex","setChallengeIndex","setGameStatus","useRef","simulationStatus","handleRunClick","code","workspaceToCode","Interpreter","nextStep","step","setTimeout","f","needExecutionDelay","handleStopResetClick","assign","pageIndex","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0c844f19.chunk.js","sourcesContent":["import React, { useEffect, useState, useMemo, memo } from \"react\";\nimport Blockly from \"blockly\";\n\nimport \"./styles.sass\";\n\nimport { IBlockly, ToolboxConfig } from \"../../util/challenges\";\nimport { BlocklyComponent } from \"../../util/customBlocks\";\n\nexport interface Props {\n  blocklyConfig: IBlockly;\n  blocklyToolboxConfig: ToolboxConfig;\n  blocklyWorkspaceRef: React.MutableRefObject<Blockly.WorkspaceSvg | null>;\n  setRemainingBlocks: React.Dispatch<React.SetStateAction<number>>;\n  style?: React.CSSProperties;\n}\n\nexport interface Toolbox {\n  kind: string;\n  contents: {\n    kind: string;\n    type: BlocklyComponent | string;\n  }[];\n}\n\nexport default memo(function BlocklyWidget({\n  blocklyConfig,\n  blocklyToolboxConfig,\n  blocklyWorkspaceRef,\n  setRemainingBlocks,\n  style,\n}: Props) {\n  const [workspace, setWorkspace] = useState<Blockly.WorkspaceSvg | null>(null);\n\n  const blocks = blocklyToolboxConfig.blocks;\n\n  useEffect(() => {\n    window.Blockly = Blockly;\n  }, []);\n\n  useEffect(() => {\n    if (!blocks.custom) return;\n\n    blocks.custom.forEach((block) => {\n      Blockly.Blocks[block.type] = {\n        init: function () {\n          (this as any).jsonInit(block);\n        },\n      };\n\n      (Blockly as any).JavaScript[block.type] = block.generatorCallback;\n    });\n  }, [workspace, blocks]);\n\n  useEffect(() => {\n    if (!workspace) return;\n\n    workspace.addChangeListener(() => {\n      setRemainingBlocks(workspace.remainingCapacity());\n    });\n\n    setRemainingBlocks(workspace.remainingCapacity());\n  }, [workspace, setRemainingBlocks]);\n\n  const toolbox: Toolbox = useMemo(() => {\n    if (!blocks.builtin && !blocks.custom) return { kind: \"\", contents: [] };\n\n    const toolbox: Toolbox = {\n      kind: \"flyoutToolbox\",\n      contents: [],\n    };\n\n    if (blocks.builtin && Array.isArray(blocks.builtin))\n      blocks.builtin.forEach((type) => toolbox.contents.push({ kind: \"block\", type }));\n\n    if (blocks.custom && Array.isArray(blocks.custom))\n      blocks.custom.forEach(({ type }) => toolbox.contents.push({ kind: \"block\", type }));\n\n    return toolbox;\n  }, [blocks]);\n\n  useEffect(() => {\n    const config: Blockly.BlocklyOptions = {\n      ...(blocklyConfig || {}),\n      toolbox: (toolbox as unknown) as HTMLElement,\n      trashcan: true,\n    };\n    const blocklyDiv = document.querySelector(\".blockly-div\");\n\n    if (!blocklyDiv) return;\n    const workspace = Blockly.inject(blocklyDiv, config);\n    setWorkspace(workspace);\n\n    (Blockly as any).JavaScript.STATEMENT_PREFIX = \"highlightBlock(%1);\\n\";\n    (Blockly as any).JavaScript.addReservedWords(\"highlightBlock\");\n\n    return workspace.dispose.bind(workspace);\n  }, [toolbox, blocklyConfig]);\n\n  useEffect(() => {\n    blocklyWorkspaceRef.current = workspace;\n  }, [workspace, blocklyWorkspaceRef]);\n\n  return <div className=\"blockly-div\" style={style} />;\n});\n","// source: https://blockly-demo.appspot.com/static/demos/blockfactory/index.html#8wpthh\ninterface BlocklyArgs {\n  type: string;\n  name?: string;\n  options?: Array<Array<string>>;\n}\n\nexport interface BlocklyComponent {\n  type: string;\n  message0: string;\n  args0?: BlocklyArgs[];\n  inputsInline?: boolean;\n  previousStatement: object | null;\n  nextStatement: object | null;\n  colour: number;\n  tooltip: string;\n  helpUrl: string;\n  generatorCallback(block?: any): void;\n}\n\nexport const movementForward: BlocklyComponent = {\n  type: \"movement_forward\",\n  message0: \"forward\",\n  previousStatement: null,\n  nextStatement: null,\n  colour: 285,\n  tooltip: \"Moves one step forward\",\n  helpUrl: \"\",\n  generatorCallback: () => \"forward();\\n\",\n};\n\n// source: https://blockly-demo.appspot.com/static/demos/blockfactory/index.html#83j9gt\nexport const movementRotate: BlocklyComponent = {\n  type: \"movement_rotate\",\n  message0: \"turn %1 %2\",\n  args0: [\n    {\n      type: \"input_dummy\",\n    },\n    {\n      type: \"field_dropdown\",\n      name: \"direction\",\n      options: [\n        [\"left ↺\", \"L\"],\n        [\"right ↻\", \"R\"],\n      ],\n    },\n  ],\n  inputsInline: true,\n  previousStatement: null,\n  nextStatement: null,\n  colour: 285,\n  tooltip: \"Turn to the specified direction\",\n  helpUrl: \"\",\n  generatorCallback: (block) =>\n    block.getFieldValue(\"direction\") === \"L\" ? \"turnLeft();\\n\" : \"turnRight();\\n\",\n};\n\n// source: https://blockly-demo.appspot.com/static/demos/blockfactory/index.html#m5x4ff\nexport const controlsIfPath: BlocklyComponent = {\n  type: \"controls_if_path\",\n  message0: \"if path %1 %2 %3 do %4\",\n  args0: [\n    {\n      type: \"input_dummy\",\n    },\n    {\n      type: \"field_dropdown\",\n      name: \"direction\",\n      options: [\n        [\"ahead\", \"A\"],\n        [\"to the left ↺\", \"L\"],\n        [\"to the right ↻\", \"R\"],\n      ],\n    },\n    {\n      type: \"input_dummy\",\n    },\n    {\n      type: \"input_statement\",\n      name: \"statement\",\n    },\n  ],\n  inputsInline: true,\n  previousStatement: null,\n  nextStatement: null,\n  colour: 210,\n  tooltip: \"Execute the 'do' statement if is possible to go to the specified direction\",\n  helpUrl: \"\",\n  generatorCallback: (block) => {\n    const direction = block.getFieldValue(\"direction\");\n    const condition =\n      direction === \"A\"\n        ? \"isPathForward()\"\n        : direction === \"L\"\n        ? \"isPathToLeft()\"\n        : \"isPathToRight()\";\n\n    return `if (${condition}) {\n  ${(window as any).Blockly.JavaScript.statementToCode(block, \"statement\") || \"\"}\n}`;\n  },\n};\n\n// source: https://blockly-demo.appspot.com/static/demos/blockfactory/index.html#buty92\nexport const controlsIfElsePath: BlocklyComponent = {\n  type: \"controls_if_else_path\",\n  message0: \"if path %1 %2 %3 do %4 else %5\",\n  args0: [\n    {\n      type: \"input_dummy\",\n    },\n    {\n      type: \"field_dropdown\",\n      name: \"direction\",\n      options: [\n        [\"ahead\", \"A\"],\n        [\"to the left ↺\", \"L\"],\n        [\"to the right ↻\", \"R\"],\n      ],\n    },\n    {\n      type: \"input_dummy\",\n    },\n    {\n      type: \"input_statement\",\n      name: \"truthy_statement\",\n    },\n    {\n      type: \"input_statement\",\n      name: \"falsy_statement\",\n    },\n  ],\n  inputsInline: true,\n  previousStatement: null,\n  nextStatement: null,\n  colour: 210,\n  tooltip:\n    \"Execute the 'do' statement if is possible to go to the specified direction. Otherwise, it executes the 'else' statement.\",\n  helpUrl: \"\",\n  generatorCallback: (block) => {\n    const direction = block.getFieldValue(\"direction\");\n    const condition =\n      direction === \"A\"\n        ? \"isPathForward()\"\n        : direction === \"L\"\n        ? \"isPathToLeft()\"\n        : \"isPathToRight()\";\n\n    return `if (${condition}) {\n  ${(window as any).Blockly.JavaScript.statementToCode(block, \"truthy_statement\") || \"\"}\n} else {\n  ${(window as any).Blockly.JavaScript.statementToCode(block, \"falsy_statement\") || \"\"}\n}`;\n  },\n};\n\n// source: https://blockly-demo.appspot.com/static/demos/blockfactory/index.html#9ag263\nexport const controlsRepeatUntilReachEnd: BlocklyComponent = {\n  type: \"controls_repeat_until_reach_end\",\n  message0: \"repeat until ⚐ %1 do %2\",\n  args0: [\n    {\n      type: \"input_dummy\",\n    },\n    {\n      type: \"input_statement\",\n      name: \"statement\",\n    },\n  ],\n  previousStatement: null,\n  nextStatement: null,\n  colour: 120,\n  tooltip: \"Repeat the inside code until end is reached\",\n  helpUrl: \"\",\n  generatorCallback: (block) => `while (notDone()) {\n  ${(window as any).Blockly.JavaScript.statementToCode(block, \"statement\") || \"\"}\n}`,\n};\n\nconst customBlocks = {\n  movementForward,\n  movementRotate,\n  controlsIfPath,\n  controlsIfElsePath,\n  controlsRepeatUntilReachEnd,\n};\n\nexport default customBlocks;\n","import {\n  movementForward,\n  movementRotate,\n  controlsIfPath,\n  controlsIfElsePath,\n  controlsRepeatUntilReachEnd,\n  BlocklyComponent,\n} from \"./customBlocks\";\n\nexport interface Challenge {\n  toolbox: ToolboxConfig;\n  map: Map;\n  blockly: IBlockly;\n}\n\nexport interface ToolboxConfig {\n  blocks: {\n    builtin?: string[];\n    custom?: BlocklyComponent[];\n  };\n}\n\nexport interface Map {\n  size: {\n    rows: number;\n    columns: number;\n  };\n  path: MapPoint[];\n  start: MapPoint;\n  finish: MapPoint;\n}\n\nexport interface MapPoint {\n  x: number; // x axis coordinate from the left\n  y: number; // y axis coordinate from the top\n}\n\nexport interface IBlockly {\n  maxBlocks?: number;\n}\n\nconst challenges: Challenge[] = [\n  {\n    toolbox: {\n      blocks: {\n        builtin: [],\n        custom: [movementForward, movementRotate],\n      },\n    },\n    map: {\n      size: { rows: 20, columns: 20 },\n      path: [\n        { x: 9, y: 10 },\n        { x: 10, y: 10 },\n        { x: 11, y: 10 },\n      ],\n      start: { x: 9, y: 10 },\n      finish: { x: 11, y: 10 },\n    },\n    blockly: {},\n  },\n  {\n    toolbox: {\n      blocks: {\n        builtin: [],\n        custom: [movementForward, movementRotate, controlsRepeatUntilReachEnd],\n      },\n    },\n    map: {\n      size: { rows: 20, columns: 20 },\n      path: [\n        { x: 9, y: 10 },\n        { x: 10, y: 10 },\n        { x: 11, y: 10 },\n        { x: 11, y: 9 },\n        { x: 11, y: 8 },\n        { x: 11, y: 7 },\n        { x: 11, y: 6 },\n        { x: 11, y: 5 },\n      ],\n      start: { x: 9, y: 10 },\n      finish: { x: 11, y: 5 },\n    },\n    blockly: {\n      maxBlocks: 5,\n    },\n  },\n  {\n    toolbox: {\n      blocks: {\n        builtin: [],\n        custom: [movementForward, movementRotate, controlsIfPath, controlsRepeatUntilReachEnd],\n      },\n    },\n    map: {\n      size: { rows: 20, columns: 20 },\n      path: [\n        { x: 9, y: 10 },\n        { x: 10, y: 10 },\n        { x: 11, y: 10 },\n        { x: 12, y: 10 },\n        { x: 12, y: 9 },\n        { x: 12, y: 8 },\n        { x: 12, y: 7 },\n        { x: 12, y: 6 },\n        { x: 12, y: 5 },\n        { x: 11, y: 5 },\n        { x: 10, y: 5 },\n        { x: 9, y: 5 },\n        { x: 8, y: 5 },\n        { x: 7, y: 5 },\n        { x: 6, y: 5 },\n        { x: 6, y: 6 },\n        { x: 6, y: 7 },\n        { x: 6, y: 8 },\n        { x: 6, y: 9 },\n        { x: 6, y: 10 },\n      ],\n      start: { x: 9, y: 10 },\n      finish: { x: 6, y: 10 },\n    },\n    blockly: {\n      maxBlocks: 4,\n    },\n  },\n  {\n    toolbox: {\n      blocks: {\n        builtin: [],\n        custom: [movementForward, movementRotate, controlsIfPath, controlsRepeatUntilReachEnd],\n      },\n    },\n    map: {\n      size: { rows: 20, columns: 20 },\n      path: [\n        { x: 8, y: 10 },\n        { x: 9, y: 10 },\n        { x: 10, y: 10 },\n        { x: 11, y: 10 },\n        { x: 11, y: 9 },\n        { x: 11, y: 8 },\n        { x: 11, y: 7 },\n        { x: 11, y: 6 },\n        { x: 11, y: 5 },\n        { x: 11, y: 4 },\n        { x: 12, y: 4 },\n        { x: 13, y: 4 },\n        { x: 14, y: 4 },\n      ],\n      start: { x: 8, y: 10 },\n      finish: { x: 14, y: 4 },\n    },\n    blockly: {\n      maxBlocks: 6,\n    },\n  },\n  {\n    toolbox: {\n      blocks: {\n        builtin: [],\n        custom: [\n          movementForward,\n          movementRotate,\n          controlsIfPath,\n          controlsIfElsePath,\n          controlsRepeatUntilReachEnd,\n        ],\n      },\n    },\n    map: {\n      size: { rows: 20, columns: 20 },\n      path: [\n        { x: 10, y: 12 },\n        { x: 11, y: 12 },\n        { x: 12, y: 12 },\n        { x: 13, y: 12 },\n        { x: 13, y: 11 },\n        { x: 13, y: 10 },\n        { x: 13, y: 9 },\n        { x: 13, y: 8 },\n        { x: 13, y: 7 },\n        { x: 13, y: 6 },\n        { x: 13, y: 5 },\n        { x: 13, y: 4 },\n        { x: 12, y: 4 },\n        { x: 11, y: 4 },\n        { x: 10, y: 4 },\n        { x: 9, y: 4 },\n        { x: 8, y: 4 },\n        { x: 7, y: 4 },\n        { x: 6, y: 4 },\n        { x: 5, y: 4 },\n        { x: 4, y: 4 },\n        { x: 3, y: 4 },\n        { x: 2, y: 4 },\n        { x: 1, y: 4 },\n\n        //little quare y:\n        { x: 12, y: 6 },\n        { x: 11, y: 6 },\n        { x: 11, y: 5 },\n\n        //path to the right\n        { x: 8, y: 3 },\n        { x: 8, y: 2 },\n        { x: 8, y: 1 },\n        { x: 9, y: 1 },\n        { x: 10, y: 1 },\n\n        //path to the left\n        { x: 5, y: 5 },\n        { x: 5, y: 6 },\n        { x: 5, y: 7 },\n        { x: 5, y: 8 },\n        { x: 5, y: 9 },\n        { x: 5, y: 10 },\n        { x: 5, y: 11 },\n        { x: 5, y: 12 },\n        { x: 4, y: 10 },\n        { x: 3, y: 10 },\n        { x: 6, y: 10 },\n        { x: 7, y: 10 },\n      ],\n      start: { x: 10, y: 12 },\n      finish: { x: 1, y: 4 },\n    },\n    blockly: {\n      maxBlocks: 7,\n    },\n  },\n];\n\nexport default challenges;\n","import { GameStatus } from \"../components/Game\";\n\nexport default function gameStatusToString(status: GameStatus) {\n  switch (status) {\n    case GameStatus.Running:\n      return \"running\";\n    case GameStatus.Stop:\n      return \"stop\";\n    case GameStatus.Collision:\n      return \"collision\";\n    case GameStatus.Fail:\n      return \"fail\";\n    case GameStatus.Finish:\n      return \"finish\";\n  }\n}\n","import React, { useState, useEffect } from \"react\";\n\nimport { GameStatus } from \"../Game\";\nimport { Map as IMap } from \"../../util/challenges\";\nimport { PlayerCoordinates } from \"../../util/getInitialPlayerCoordinates\";\nimport makeMapMatrix from \"../../util/makeMapMatrix\";\nimport gameStatusToString from \"../../util/gameStatusToString\";\nimport \"./styles.sass\";\n\nexport interface Props {\n  gameStatus: GameStatus;\n  map: IMap;\n  player: PlayerCoordinates;\n}\n\nexport default function Map({ gameStatus, map, player }: Props) {\n  const [mapWidth, setMapWidth] = useState(0);\n\n  useEffect(() => {\n    function updateMapWidth() {\n      const mapElement = document.querySelector(\".game .map\");\n      const { width } = mapElement ? window.getComputedStyle(mapElement) : { width: \"0\" };\n      setMapWidth(parseInt(width || \"0\"));\n    }\n\n    updateMapWidth();\n\n    window.addEventListener(\"resize\", updateMapWidth);\n    return () => window.removeEventListener(\"resize\", updateMapWidth);\n  }, [setMapWidth]);\n\n  const rows = map.size && map.size.rows ? map.size.rows : 10;\n  const columns = map.size && map.size.columns ? map.size.columns : 10;\n\n  const mapMatrix = makeMapMatrix({ map, rows, columns });\n\n  const mapStyle = {\n    \"--columns\": columns,\n    \"--rows\": rows,\n    \"--map-width\": mapWidth,\n  } as React.CSSProperties;\n\n  const playerStyle = {\n    \"--column\": player.position.x,\n    \"--row\": player.position.y,\n    \"--angle\": -player.angle,\n  } as React.CSSProperties;\n\n  return (\n    <div className=\"map\" style={mapStyle}>\n      {mapMatrix.map((row, index) => (\n        <div key={`row-${index}`} className=\"row\">\n          {row.map((column, index) => (\n            <div key={`column-${index}`} className={`column ${column}`}>\n              {column === \"finish\" ? \"⚐\" : \"\"}\n            </div>\n          ))}\n        </div>\n      ))}\n      <div className={`player ${gameStatusToString(gameStatus)}`} style={playerStyle}>\n        ➤\n      </div>\n    </div>\n  );\n}\n","import { Map } from \"./challenges\";\n\nexport interface Params {\n  map: Map;\n  rows: number;\n  columns: number;\n}\n\nexport default function makeMapMatrix({ map, rows, columns }: Params) {\n  const mapMatrix: string[][] = [];\n\n  for (let row = 0; row < rows; row++) {\n    mapMatrix[row] = [];\n    mapMatrix[row].length = columns;\n  }\n\n  for (let row = 0; row < rows; row++)\n    for (let column = 0; column < columns; column++) {\n      const found = map.path.find((point) => point.x === column && point.y === row);\n      mapMatrix[row][column] = found ? \"path\" : \"extern\";\n    }\n\n  if (map.start) mapMatrix[map.start.y][map.start.x] = \"start\";\n  if (map.finish) mapMatrix[map.finish.y][map.finish.x] = \"finish\";\n\n  return mapMatrix;\n}\n","import { PlayerCoordinates } from \"./getInitialPlayerCoordinates\";\nimport { Map } from \"./challenges\";\n\nexport interface Params {\n  player: PlayerCoordinates;\n  map: Map;\n}\n\nexport default function checkFinish({ player, map }: Params) {\n  return player.position.x === map.finish.x && player.position.y === map.finish.y;\n}\n","export interface Coordinate {\n  x: number;\n  y: number;\n}\n\nexport default function hasCoordinate({ x, y }: Coordinate, list: Coordinate[]) {\n  if (!Array.isArray(list)) return false;\n\n  const found = list.find((e) => e.x === x && e.y === y);\n  return found !== undefined;\n}\n","import React from \"react\";\nimport Blockly from \"blockly\";\n\nimport checkFinish from \"./checkFinish\";\nimport hasCoordinate from \"./hasCoordinate\";\nimport { PlayerCoordinates } from \"./getInitialPlayerCoordinates\";\nimport { Map } from \"./challenges\";\n\nexport interface This {\n  player: PlayerCoordinates;\n  map: Map;\n  workspace: Blockly.WorkspaceSvg | null;\n  refresh: React.Dispatch<React.SetStateAction<object>>;\n}\n\nexport interface ApiFunctions {\n  forward(this: This): void;\n  turnLeft(this: This): void;\n  turnRight(this: This): void;\n  notDone(this: This): boolean;\n  isPathForward(this: This): boolean;\n  isPathToLeft(this: This): boolean;\n  isPathToRight(this: This): boolean;\n  highlightBlock(this: This, id: string): void;\n}\n\nexport function forward(this: This) {\n  if (this.workspace) (this as any).workspace.lastExecutedFunction = \"forward\";\n\n  const angle = Math.abs((this.player.angle % 360) + 360) % 360;\n  const x = this.player.position.x;\n  const y = this.player.position.y;\n  const { columns, rows } = this.map.size;\n\n  if (angle === 0 && x + 1 < columns) this.player.position.x++;\n  else if (angle === 90 && y) this.player.position.y--;\n  else if (angle === 180 && x) this.player.position.x--;\n  else if (angle === 270 && y + 1 < rows) this.player.position.y++;\n\n  this.refresh({});\n}\n\nexport function turnLeft(this: This) {\n  (this as any).workspace.lastExecutedFunction = \"turnLeft\";\n\n  this.player.angle += 90;\n  this.refresh({});\n}\n\nexport function turnRight(this: This) {\n  (this as any).workspace.lastExecutedFunction = \"turnRight\";\n\n  this.player.angle -= 90;\n  this.refresh({});\n}\n\nexport function notDone(this: This) {\n  (this as any).workspace.lastExecutedFunction = \"notDone\";\n\n  return !checkFinish({ player: this.player, map: this.map });\n}\n\nfunction hasPathForward(angle: number, player: PlayerCoordinates, map: Map) {\n  angle = Math.abs((angle % 360) + 360) % 360;\n  const x = player.position.x;\n  const y = player.position.y;\n  const { columns, rows } = map.size;\n\n  if (angle === 0) return x < columns - 1 && hasCoordinate({ x: x + 1, y }, map.path);\n  if (angle === 90) return y > 0 && hasCoordinate({ x: x, y: y - 1 }, map.path);\n  if (angle === 180) return x > 0 && hasCoordinate({ x: x - 1, y }, map.path);\n  if (angle === 270) return y < rows - 1 && hasCoordinate({ x: x, y: y + 1 }, map.path);\n\n  return false;\n}\n\nexport function isPathForward(this: This) {\n  (this as any).workspace.lastExecutedFunction = \"isPathForward\";\n\n  return hasPathForward(this.player.angle, this.player, this.map);\n}\n\nexport function isPathToLeft(this: This) {\n  (this as any).workspace.lastExecutedFunction = \"isPathToLeft\";\n\n  return hasPathForward(this.player.angle + 90, this.player, this.map);\n}\n\nexport function isPathToRight(this: This) {\n  (this as any).workspace.lastExecutedFunction = \"isPathToRight\";\n\n  return hasPathForward(this.player.angle - 90, this.player, this.map);\n}\n\nexport function highlightBlock(this: This, id: string) {\n  (this as any).workspace.highlightBlock(id);\n}\n\nconst functions: ApiFunctions = {\n  forward,\n  turnLeft,\n  turnRight,\n  notDone,\n  isPathForward,\n  isPathToLeft,\n  isPathToRight,\n  highlightBlock,\n};\n\nexport default functions;\n","import { PlayerCoordinates } from \"./getInitialPlayerCoordinates\";\nimport { Map } from \"./challenges\";\n\nexport interface Params {\n  player: PlayerCoordinates;\n  map: Map;\n}\n\nexport default function checkCollision({ player, map }: Params) {\n  for (let i = 0; i < map.path.length; i++)\n    if (map.path[i].x === player.position.x && map.path[i].y === player.position.y) return false;\n\n  return true;\n}\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport Blockly from \"blockly\";\r\n\r\nimport Map from \"../Map\";\r\nimport apiFunctions, { ApiFunctions } from \"../../util/apiFunctions\";\r\nimport checkCollision from \"../../util/checkCollision\";\r\nimport { Map as IMap } from \"../../util/challenges\";\r\nimport { PlayerCoordinates } from \"../../util/getInitialPlayerCoordinates\";\r\nimport { This } from \"../../util/apiFunctions\";\r\n\r\nimport \"./styles.sass\";\r\n\r\nexport enum GameStatus {\r\n  Running,\r\n  Stop,\r\n  Collision,\r\n  Fail,\r\n  Finish,\r\n}\r\n\r\nexport interface Props {\r\n  gameRef: React.MutableRefObject<GameRef | null>;\r\n  gameStatus: GameStatus;\r\n  onGameStatusChange(status: GameStatus): void;\r\n  map: IMap;\r\n  player: PlayerCoordinates;\r\n  blocklyWorkspaceRef: React.MutableRefObject<Blockly.WorkspaceSvg | null>;\r\n  remainingBlocks: number;\r\n}\r\n\r\nexport interface GameRef {\r\n  interpreterInitHandler(interpreter: object, globalObject: object): void;\r\n}\r\n\r\nexport default function Game({\r\n  gameRef,\r\n  gameStatus,\r\n  onGameStatusChange,\r\n  map,\r\n  player,\r\n  blocklyWorkspaceRef,\r\n  remainingBlocks,\r\n}: Props) {\r\n  const [, setRefresh] = useState<object>({});\r\n\r\n  useEffect(() => {\r\n    if (!map.start) return;\r\n\r\n    player.position.x = map.start.x;\r\n    player.position.y = map.start.y;\r\n  }, [map, player]);\r\n\r\n  const refresh = useCallback(() => {\r\n    if (checkCollision({ player, map })) {\r\n      onGameStatusChange(GameStatus.Collision);\r\n    }\r\n\r\n    setRefresh({});\r\n  }, [setRefresh, onGameStatusChange, player, map]);\r\n\r\n  function interpreterInitHandler(interpreter: object, globalObject: object) {\r\n    const that: This = {\r\n      player,\r\n      map,\r\n      workspace: blocklyWorkspaceRef.current,\r\n      refresh,\r\n    };\r\n\r\n    Object.keys(apiFunctions).forEach((key) => {\r\n      (interpreter as any).setProperty(\r\n        globalObject,\r\n        key,\r\n        (interpreter as any).createNativeFunction(\r\n          apiFunctions[key as keyof ApiFunctions].bind(that)\r\n        )\r\n      );\r\n    });\r\n  }\r\n\r\n  gameRef.current = { interpreterInitHandler };\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <Map gameStatus={gameStatus} player={player} map={map} />\r\n      {remainingBlocks !== Infinity && (\r\n        <div className=\"remaining-blocks-container\">{`Remaining blocks: ${remainingBlocks}`}</div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import \"./styles.sass\";\n\nexport interface Props {\n  total: number;\n  current: number;\n  onChange(index: number): void;\n}\n\nexport default function PaginList({ total, current, onChange }: Props) {\n  const start = total > 5 ? (current - 2 < 1 ? 1 : current - 2) : 1;\n  const end = total > 5 ? (start + 4 > total ? total : start + 4) : total;\n\n  const indexes = [];\n  for (let i = start; i <= end; i++) indexes.push(i);\n\n  return (\n    <ul className=\"paging-list\">\n      {indexes.map((i) => (\n        <li key={`${i}`} className={i === current ? \"selected\" : \"\"} onClick={() => onChange(i)}>\n          {i}\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import { MapPoint } from \"./challenges\";\n\nexport interface PlayerCoordinates {\n  angle: number;\n  position: MapPoint;\n}\n\nexport default function getInitialPlayerCoordinates(start?: MapPoint): PlayerCoordinates {\n  const x = start ? start.x : 0;\n  const y = start ? start.y : 0;\n\n  return {\n    angle: 0,\n    position: { x, y },\n  };\n}\n","import React, { useState, useMemo, useRef, useEffect } from \"react\";\r\nimport BlocklyWidget from \"./components/BlocklyWidget\";\r\nimport Blockly from \"blockly\";\r\n\r\nimport \"./App.sass\";\r\nimport challenges from \"./util/challenges\";\r\nimport Game, { GameStatus, GameRef } from \"./components/Game\";\r\nimport PagingList from \"./components/PagingList\";\r\nimport checkCollision from \"./util/checkCollision\";\r\nimport checkFinish from \"./util/checkFinish\";\r\nimport getInitialPlayerCoordinates from \"./util/getInitialPlayerCoordinates\";\r\nimport gameStatusToString from \"./util/gameStatusToString\";\r\n\r\nconst instructionStepDelay = 500; // milliseconds\r\n\r\nexport default function App() {\r\n  const [challengeIndex, setChallengeIndex] = useState<number>(0);\r\n  const [gameStatus, setGameStatus] = useState<GameStatus>(GameStatus.Stop);\r\n  const [remainingBlocks, setRemainingBlocks] = useState<number>(Infinity);\r\n  const blocklyWorkspaceRef = useRef<Blockly.WorkspaceSvg | null>(null);\r\n  const gameRef = useRef<GameRef | null>(null);\r\n  const player = useMemo(getInitialPlayerCoordinates, []);\r\n  const simulationStatus = useMemo(() => ({ status: GameStatus.Stop }), []);\r\n\r\n  useEffect(() => {\r\n    simulationStatus.status = gameStatus;\r\n  }, [gameStatus, simulationStatus]);\r\n\r\n  useEffect(turnLastHighlightedBlockOff, [gameStatus]);\r\n\r\n  const blocklyToolboxConfig = useMemo(() => {\r\n    return challenges[challengeIndex].toolbox;\r\n  }, [challengeIndex]);\r\n\r\n  const blocklyConfig = useMemo(() => {\r\n    return challenges[challengeIndex].blockly;\r\n  }, [challengeIndex]);\r\n\r\n  const map = useMemo(() => {\r\n    return challenges[challengeIndex].map;\r\n  }, [challengeIndex]);\r\n\r\n  function turnLastHighlightedBlockOff() {\r\n    if (blocklyWorkspaceRef.current) blocklyWorkspaceRef.current.highlightBlock(\"\");\r\n  }\r\n\r\n  function needExecutionDelay() {\r\n    if (!blocklyWorkspaceRef.current) return false;\r\n\r\n    const delayedFunctions = [\"forward\", \"turnLeft\", \"turnRight\"];\r\n    const found = delayedFunctions.find(\r\n      (f) => f === (blocklyWorkspaceRef.current as any).lastExecutedFunction\r\n    );\r\n    (blocklyWorkspaceRef.current as any).lastExecutedFunction = \"\";\r\n    return found;\r\n  }\r\n\r\n  function handleRunClick() {\r\n    if (!blocklyWorkspaceRef.current || !gameRef.current) return;\r\n\r\n    const code: string = (Blockly as any).JavaScript.workspaceToCode(blocklyWorkspaceRef.current);\r\n    const interpreter = new (window as any).Interpreter(\r\n      code,\r\n      (gameRef.current as any).interpreterInitHandler\r\n    );\r\n\r\n    function endOfSimulation() {\r\n      if (checkCollision({ player, map })) setGameStatus(GameStatus.Collision);\r\n      else if (checkFinish({ player, map })) setGameStatus(GameStatus.Finish);\r\n      else setGameStatus(GameStatus.Fail);\r\n    }\r\n\r\n    simulationStatus.status = GameStatus.Running;\r\n    setGameStatus(GameStatus.Running);\r\n\r\n    function nextStep() {\r\n      if (simulationStatus.status !== GameStatus.Running) return;\r\n\r\n      if (interpreter.step()) setTimeout(nextStep, needExecutionDelay() ? instructionStepDelay : 0);\r\n      else endOfSimulation();\r\n    }\r\n\r\n    nextStep();\r\n  }\r\n\r\n  function handleStopResetClick() {\r\n    Object.assign(player, getInitialPlayerCoordinates(challenges[challengeIndex].map.start));\r\n    setGameStatus(GameStatus.Stop);\r\n  }\r\n\r\n  function handleNextClick() {\r\n    if (challengeIndex + 1 < challenges.length) {\r\n      setChallengeIndex(challengeIndex + 1);\r\n      Object.assign(player, getInitialPlayerCoordinates(challenges[challengeIndex + 1].map.start));\r\n      setGameStatus(GameStatus.Stop);\r\n    }\r\n  }\r\n\r\n  function handlePagingClick(pageIndex: number) {\r\n    setChallengeIndex(pageIndex - 1);\r\n    Object.assign(player, getInitialPlayerCoordinates(challenges[pageIndex - 1].map.start));\r\n    setGameStatus(GameStatus.Stop);\r\n  }\r\n\r\n  function handleButtonClick() {\r\n    switch (gameStatus) {\r\n      case GameStatus.Running:\r\n        handleStopResetClick();\r\n        break;\r\n      case GameStatus.Stop:\r\n        handleRunClick();\r\n        break;\r\n      case GameStatus.Collision:\r\n        handleStopResetClick();\r\n        break;\r\n      case GameStatus.Fail:\r\n        handleStopResetClick();\r\n        break;\r\n      case GameStatus.Finish:\r\n        handleNextClick();\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"game-button-container\">\r\n        <PagingList\r\n          total={challenges.length}\r\n          current={challengeIndex + 1}\r\n          onChange={handlePagingClick}\r\n        />\r\n        <Game\r\n          remainingBlocks={remainingBlocks}\r\n          gameRef={gameRef}\r\n          gameStatus={gameStatus}\r\n          onGameStatusChange={setGameStatus}\r\n          map={map}\r\n          player={player}\r\n          blocklyWorkspaceRef={blocklyWorkspaceRef}\r\n        />\r\n        <button\r\n          onClick={handleButtonClick}\r\n          className={`run-button ${gameStatusToString(gameStatus)}`}\r\n        />\r\n      </div>\r\n      <BlocklyWidget\r\n        setRemainingBlocks={setRemainingBlocks}\r\n        blocklyToolboxConfig={blocklyToolboxConfig}\r\n        blocklyConfig={blocklyConfig}\r\n        blocklyWorkspaceRef={blocklyWorkspaceRef}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}